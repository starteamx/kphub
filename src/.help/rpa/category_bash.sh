BASE_DIR="c:\project\kphub\src\audio-video"
mkdir -p "$BASE_DIR"

# 创建主README.md
cat > "$BASE_DIR/README.md" << 'EOF'
---
title: 音视频开发知识体系
icon: audio-video
order: 1
---

# 音视频开发知识体系

本知识库系统地整理了音视频开发工程师所需掌握的核心知识和技能，从基础概念到高级特性，从编解码原理到流媒体技术，全面覆盖音视频开发的各个方面。
EOF

# 创建第1章目录
mkdir -p "$BASE_DIR/第1章-课程导学与准备工作"

# 创建第1章README文件
cat > "$BASE_DIR/第1章-课程导学与准备工作/README.md" << 'EOF'
---
title: 课程导学与准备工作
icon: course-intro
order: 1
---

# 课程导学与准备工作

本章介绍音视频开发课程的整体内容和学习方法。
EOF

# 创建1.1课程导学文件
cat > "$BASE_DIR/第1章-课程导学与准备工作/1.1-课程导学.md" << 'EOF'
---
title: 课程导学
icon: course-guide
order: 1
---

# 课程导学

## 课程概述
- 课程目标
- 课程内容
- 学习路径
- 技能要求
- 预期收获

## 知识体系
- 基础理论
- 编解码技术
- 音视频处理
- 流媒体技术
- 实战项目

## 学习建议
- 学习方法
- 重点难点
- 实践要求
- 资源推荐
- 注意事项
EOF

# 创建1.2课程介绍及学习指导文件
cat > "$BASE_DIR/第1章-课程导学与准备工作/1.2-课程介绍及学习指导.md" << 'EOF'
---
title: 课程介绍及学习指导
icon: course-guide
order: 2
---

# 课程介绍及学习指导

## 课程内容
- 理论基础
- 实践项目
- 技术栈
- 应用场景
- 发展方向

## 学习方法
- 知识积累
- 实践操作
- 项目实战
- 问题解决
- 技能提升

## 学习建议
- 前置知识
- 学习计划
- 重点把握
- 资源利用
- 注意事项
EOF

# 创建第2章目录
mkdir -p "$BASE_DIR/第2章-音视频环境基础"

# 创建第2章README文件
cat > "$BASE_DIR/第2章-音视频环境基础/README.md" << 'EOF'
---
title: 音视频环境基础
icon: av-basics
order: 2
---

# 音视频环境基础

本章介绍音视频开发的基础环境和核心概念。
EOF
BASE_DIR="c:\project\kphub\src\audio-video"

# 创建2.1音视频应用场景文件
cat > "$BASE_DIR/第2章-音视频环境基础/2.1-音视频应用场景.md" << 'EOF'
---
title: 音视频应用场景
icon: av-scenarios
order: 1
---

# 音视频应用场景

## 直播应用
- 直播平台
- 在线教育
- 远程会议
- 游戏直播
- 社交直播

## 点播应用
- 视频网站
- 短视频
- 在线课程
- 影音娱乐
- 企业培训

## 实时通信
- 音视频通话
- 视频会议
- 远程协作
- 在线问诊
- 远程教学

## 技术要点
- 编解码技术
- 传输协议
- 延迟控制
- 画质优化
- 音画同步
EOF

# 创建2.2推流中断与画质问题解决文件
cat > "$BASE_DIR/第2章-音视频环境基础/2.2-推流中断与画质问题解决.md" << 'EOF'
---
title: 推流中断与画质问题解决
icon: streaming-issues
order: 2
---

# 推流中断与画质问题解决

## 推流中断
- 网络问题
- 服务器问题
- 编码问题
- 硬件问题
- 配置问题

## 画质问题
- 码率控制
- 分辨率
- 帧率
- 编码参数
- 传输质量

## 解决方案
- 网络优化
- 参数调优
- 硬件升级
- 服务器扩容
- 监控告警

## 最佳实践
- 问题排查
- 性能优化
- 质量监控
- 应急处理
- 预防措施
EOF

# 创建2.3Linux基础知识-1文件
cat > "$BASE_DIR/第2章-音视频环境基础/2.3-Linux基础知识-1.md" << 'EOF'
---
title: Linux基础知识-1
icon: linux-basic
order: 3
---

# Linux基础知识-1

## 系统基础
- 文件系统
- 用户权限
- 进程管理
- 内存管理
- 网络配置

## 常用命令
- 文件操作
- 目录管理
- 系统信息
- 网络工具
- 进程控制

## 环境配置
- 系统设置
- 环境变量
- 软件安装
- 服务管理
- 启动配置

## 实践应用
- 命令练习
- 问题解决
- 配置优化
- 性能调优
- 安全设置
EOF

# 创建2.4Linux基础知识-2文件
cat > "$BASE_DIR/第2章-音视频环境基础/2.4-Linux基础知识-2.md" << 'EOF'
---
title: Linux基础知识-2
icon: linux-advanced
order: 4
---

# Linux基础知识-2

## 系统管理
- 服务配置
- 日志管理
- 任务调度
- 备份恢复
- 性能监控

## 网络管理
- 网络配置
- 防火墙
- 远程访问
- 网络服务
- 安全策略

## 开发环境
- 编译工具
- 开发库
- 调试工具
- 版本控制
- 部署工具

## 实践应用
- 环境搭建
- 问题诊断
- 性能优化
- 安全加固
- 运维管理
EOF

# 创建2.5巩固Linux基本命令文件
cat > "$BASE_DIR/第2章-音视频环境基础/2.5-巩固Linux基本命令.md" << 'EOF'
---
title: 巩固Linux基本命令
icon: linux-commands
order: 5
---

# 巩固Linux基本命令

## 文件操作
- 文件管理
- 权限设置
- 查找搜索
- 压缩解压
- 文本处理

## 系统管理
- 进程管理
- 用户管理
- 磁盘管理
- 服务控制
- 系统监控

## 网络工具
- 网络配置
- 远程连接
- 网络诊断
- 流量监控
- 安全工具

## 实践应用
- 命令组合
- 脚本编写
- 问题排查
- 日常运维
- 技巧总结
EOF

# 创建2.6巩固vim的简单使用文件
cat > "$BASE_DIR/第2章-音视频环境基础/2.6-巩固vim的简单使用.md" << 'EOF'
---
title: 巩固vim的简单使用
icon: vim-basic
order: 6
---

# 巩固vim的简单使用

## 基本操作
- 模式切换
- 光标移动
- 编辑命令
- 查找替换
- 复制粘贴

## 高级功能
- 多文件编辑
- 分屏操作
- 宏录制
- 代码折叠
- 自动补全

## 配置优化
- 基本设置
- 快捷键映射
- 插件管理
- 主题美化
- 个性化定制

## 实践应用
- 编辑技巧
- 效率提升
- 常见问题
- 使用心得
- 进阶建议
EOF

# 创建2.7Mac环境变量设置文件
cat > "$BASE_DIR/第2章-音视频环境基础/2.7-Mac环境变量设置.md" << 'EOF'
---
title: Mac环境变量设置
icon: mac-env
order: 7
---

# Mac环境变量设置

## 环境变量基础
- 变量类型
- 配置文件
- 作用域
- 优先级
- 生效机制

## 配置方法
- 临时设置
- 永久设置
- 用户级别
- 系统级别
- 应用级别

## 常见配置
- PATH设置
- 开发环境
- 工具路径
- 系统变量
- 应用变量

## 实践应用
- 配置示例
- 问题解决
- 最佳实践
- 调试方法
- 注意事项
EOF
BASE_DIR="c:\project\kphub\src\audio-video"

# 创建第3章目录
mkdir -p "$BASE_DIR/第3章-在不同系统上编译ffmpeg"

# 创建第3章README文件
cat > "$BASE_DIR/第3章-在不同系统上编译ffmpeg/README.md" << 'EOF'
---
title: 在不同系统上编译ffmpeg
icon: ffmpeg-compile
order: 3
---

# 在不同系统上编译ffmpeg

本章详细介绍如何在不同操作系统平台上编译ffmpeg。
EOF

# 创建3.1Mac或Linux下编译ffmpeg文件
cat > "$BASE_DIR/第3章-在不同系统上编译ffmpeg/3.1-Mac或Linux下编译ffmpeg.md" << 'EOF'
---
title: Mac或Linux下编译ffmpeg
icon: unix-compile
order: 1
---

# Mac或Linux下编译ffmpeg

## 环境准备
- 开发工具
- 依赖库
- 编译工具
- 系统配置
- 源码下载

## 编译步骤
- 配置选项
- 编译命令
- 安装过程
- 测试验证
- 问题排查

## 优化配置
- 编码优化
- 硬件加速
- 功能裁剪
- 性能调优
- 调试支持

## 最佳实践
- 编译技巧
- 常见问题
- 性能优化
- 调试方法
- 注意事项
EOF

# 创建3.2Windows下编译ffmpeg文件
cat > "$BASE_DIR/第3章-在不同系统上编译ffmpeg/3.2-Windows下编译ffmpeg.md" << 'EOF'
---
title: Windows下编译ffmpeg
icon: windows-compile
order: 2
---

# Windows下编译ffmpeg

## 环境准备
- Visual Studio
- MSYS2环境
- 依赖库
- 编译工具
- 源码准备

## 编译步骤
- 环境配置
- 编译选项
- 构建过程
- 测试验证
- 问题处理

## 优化配置
- 编译优化
- 功能定制
- 性能调优
- 调试配置
- 依赖管理

## 最佳实践
- 编译技巧
- 常见问题
- 性能优化
- 调试方法
- 注意事项
EOF

# 创建3.3Cygwin环境搭建文件
cat > "$BASE_DIR/第3章-在不同系统上编译ffmpeg/3.3-Cygwin环境搭建.md" << 'EOF'
---
title: Cygwin环境搭建
icon: cygwin-setup
order: 3
---

# Cygwin环境搭建

## 安装配置
- 下载安装
- 包管理
- 环境变量
- 基础工具
- 开发工具

## 环境设置
- 系统配置
- 用户配置
- 路径设置
- 权限管理
- 网络配置

## 开发环境
- 编译工具
- 开发库
- 调试工具
- 版本控制
- 辅助工具

## 最佳实践
- 配置优化
- 常见问题
- 使用技巧
- 性能调优
- 注意事项
EOF

# 创建3.4Cygwin下安装ffmpeg文件
cat > "$BASE_DIR/第3章-在不同系统上编译ffmpeg/3.4-Cygwin下安装ffmpeg.md" << 'EOF'
---
title: Cygwin下安装ffmpeg
icon: cygwin-ffmpeg
order: 4
---

# Cygwin下安装ffmpeg

## 安装准备
- 环境检查
- 依赖安装
- 源码获取
- 工具配置
- 编译环境

## 安装步骤
- 配置选项
- 编译过程
- 安装验证
- 环境配置
- 问题处理

## 优化配置
- 功能定制
- 性能优化
- 调试支持
- 依赖管理
- 环境变量

## 最佳实践
- 安装技巧
- 常见问题
- 性能优化
- 调试方法
- 注意事项
EOF

# 创建3.5msys2环境搭建文件
cat > "$BASE_DIR/第3章-在不同系统上编译ffmpeg/3.5-msys2环境搭建.md" << 'EOF'
---
title: msys2环境搭建
icon: msys2-setup
order: 5
---

# msys2环境搭建

## 安装配置
- 下载安装
- 包管理
- 环境变量
- 基础工具
- 开发工具

## 环境设置
- 系统配置
- 用户配置
- 路径设置
- 权限管理
- 网络配置

## 开发环境
- 编译工具
- 开发库
- 调试工具
- 版本控制
- 辅助工具

## 最佳实践
- 配置优化
- 常见问题
- 使用技巧
- 性能调优
- 注意事项
EOF
BASE_DIR="c:\project\kphub\src\audio-video"

# 创建3.6msys2+mingw编译ffmpeg文件
cat > "$BASE_DIR/第3章-在不同系统上编译ffmpeg/3.6-msys2+mingw编译ffmpeg.md" << 'EOF'
---
title: msys2+mingw编译ffmpeg
icon: mingw-compile
order: 6
---

# msys2+mingw编译ffmpeg

## 环境配置
- MSYS2安装
- MinGW配置
- 依赖安装
- 工具链设置
- 环境变量

## 编译步骤
- 源码准备
- 配置选项
- 编译过程
- 安装验证
- 问题处理

## 优化配置
- 编译优化
- 功能定制
- 性能调优
- 调试支持
- 依赖管理

## 最佳实践
- 编译技巧
- 常见问题
- 性能优化
- 调试方法
- 注意事项
EOF

# 创建3.7msys2+vs编译ffmpeg文件
cat > "$BASE_DIR/第3章-在不同系统上编译ffmpeg/3.7-msys2+vs编译ffmpeg.md" << 'EOF'
---
title: msys2+vs编译ffmpeg
icon: vs-compile
order: 7
---

# msys2+vs编译ffmpeg

## 环境配置
- Visual Studio安装
- MSYS2配置
- 工具链设置
- 依赖安装
- 环境变量

## 编译步骤
- 源码准备
- 配置选项
- 编译过程
- 安装验证
- 问题处理

## 优化配置
- 编译优化
- 功能定制
- 性能调优
- 调试支持
- 依赖管理

## 最佳实践
- 编译技巧
- 常见问题
- 性能优化
- 调试方法
- 注意事项
EOF

# 创建第4章目录
mkdir -p "$BASE_DIR/第4章-C语言回顾"

# 创建第4章README文件
cat > "$BASE_DIR/第4章-C语言回顾/README.md" << 'EOF'
---
title: C语言回顾
icon: c-language
order: 4
---

# C语言回顾

本章回顾C语言的基础知识，为音视频开发打好基础。
EOF

# 创建4.1C语言HelloWorld文件
cat > "$BASE_DIR/第4章-C语言回顾/4.1-C语言HelloWorld.md" << 'EOF'
---
title: C语言HelloWorld
icon: c-hello
order: 1
---

# C语言HelloWorld

## 基础概念
- 程序结构
- 编译过程
- 运行机制
- 标准库
- 输入输出

## 开发环境
- 编译器
- IDE选择
- 环境配置
- 调试工具
- 项目管理

## 编程规范
- 代码风格
- 命名规则
- 注释规范
- 错误处理
- 最佳实践

## 实践应用
- 示例代码
- 常见问题
- 调试技巧
- 优化方法
- 注意事项
EOF

# 创建4.2基本类型与逻辑运算文件
cat > "$BASE_DIR/第4章-C语言回顾/4.2-基本类型与逻辑运算.md" << 'EOF'
---
title: 基本类型与逻辑运算
icon: c-basics
order: 2
---

# 基本类型与逻辑运算

## 基本类型
- 整型
- 浮点型
- 字符型
- 布尔型
- 空类型

## 运算符
- 算术运算
- 关系运算
- 逻辑运算
- 位运算
- 赋值运算

## 类型转换
- 隐式转换
- 显式转换
- 类型提升
- 精度损失
- 注意事项

## 实践应用
- 示例代码
- 常见问题
- 调试技巧
- 优化方法
- 注意事项
EOF

# 创建4.3高级类型-数组结构体枚举文件
cat > "$BASE_DIR/第4章-C语言回顾/4.3-高级类型-数组结构体枚举.md" << 'EOF'
---
title: 高级类型-数组结构体枚举
icon: c-advanced
order: 3
---

# 高级类型-数组结构体枚举

## 数组
- 一维数组
- 多维数组
- 数组操作
- 内存管理
- 常见应用

## 结构体
- 定义声明
- 成员访问
- 内存布局
- 嵌套结构
- 位域操作

## 枚举类型
- 定义方法
- 使用场景
- 类型转换
- 内存占用
- 最佳实践

## 实践应用
- 示例代码
- 常见问题
- 调试技巧
- 优化方法
- 注意事项
EOF
BASE_DIR="c:\project\kphub\src\audio-video"

# 创建4.4指针文件
cat > "$BASE_DIR/第4章-C语言回顾/4.4-指针.md" << 'EOF'
---
title: 指针
icon: c-pointer
order: 4
---

# 指针

## 基础概念
- 指针定义
- 内存地址
- 指针类型
- 空指针
- 野指针

## 指针操作
- 取址运算
- 解引用
- 指针运算
- 类型转换
- 指针比较

## 指针应用
- 数组指针
- 函数指针
- 指针数组
- 多级指针
- 常量指针

## 最佳实践
- 使用规范
- 常见问题
- 调试技巧
- 优化方法
- 注意事项
EOF

# 创建4.5指针的使用文件
cat > "$BASE_DIR/第4章-C语言回顾/4.5-指针的使用.md" << 'EOF'
---
title: 指针的使用
icon: pointer-usage
order: 5
---

# 指针的使用

## 基本应用
- 参数传递
- 动态内存
- 数组操作
- 字符串处理
- 结构体指针

## 高级应用
- 回调函数
- 链表操作
- 树结构
- 内存管理
- 指针优化

## 常见问题
- 内存泄漏
- 悬垂指针
- 越界访问
- 空指针
- 类型安全

## 最佳实践
- 编程规范
- 调试方法
- 性能优化
- 安全考虑
- 注意事项
EOF

# 创建4.6内存管理与分配文件
cat > "$BASE_DIR/第4章-C语言回顾/4.6-内存管理与分配.md" << 'EOF'
---
title: 内存管理与分配
icon: memory-management
order: 6
---

# 内存管理与分配

## 内存模型
- 栈内存
- 堆内存
- 全局区
- 常量区
- 代码区

## 内存操作
- malloc
- free
- calloc
- realloc
- memset

## 内存问题
- 内存泄漏
- 内存碎片
- 越界访问
- 重复释放
- 野指针

## 最佳实践
- 分配策略
- 释放规范
- 调试方法
- 性能优化
- 安全考虑
EOF

# 创建4.7条件判断与循环文件
cat > "$BASE_DIR/第4章-C语言回顾/4.7-条件判断与循环.md" << 'EOF'
---
title: 条件判断与循环
icon: control-flow
order: 7
---

# 条件判断与循环

## 条件语句
- if语句
- switch语句
- 三目运算
- 短路运算
- 嵌套条件

## 循环语句
- for循环
- while循环
- do-while循环
- break语句
- continue语句

## 流程控制
- 循环嵌套
- 跳转语句
- 异常处理
- 返回语句
- 标签语句

## 最佳实践
- 代码优化
- 性能考虑
- 可读性
- 调试技巧
- 注意事项
EOF

# 创建4.8函数文件
cat > "$BASE_DIR/第4章-C语言回顾/4.8-函数.md" << 'EOF'
---
title: 函数
icon: c-function
order: 8
---

# 函数

## 函数基础
- 函数定义
- 参数传递
- 返回值
- 函数原型
- 作用域

## 函数类型
- 内联函数
- 递归函数
- 回调函数
- 可变参数
- 库函数

## 函数指针
- 定义使用
- 函数回调
- 函数表
- 动态调用
- 类型安全

## 最佳实践
- 设计原则
- 性能优化
- 调试技巧
- 代码规范
- 注意事项
EOF

# 创建4.9文件操作文件
cat > "$BASE_DIR/第4章-C语言回顾/4.9-文件操作.md" << 'EOF'
---
title: 文件操作
icon: file-operation
order: 9
---

# 文件操作

## 文件基础
- 文件概念
- 文件类型
- 文件指针
- 文件模式
- 缓冲区

## 文件操作
- 打开关闭
- 读写操作
- 定位操作
- 错误处理
- 文件状态

## 高级操作
- 二进制操作
- 随机访问
- 文件流
- 目录操作
- 文件属性

## 最佳实践
- 操作规范
- 错误处理
- 性能优化
- 安全考虑
- 注意事项
EOF
BASE_DIR="c:\project\kphub\src\audio-video"

# 创建第5章目录
mkdir -p "$BASE_DIR/第5章-音频基础知识"

# 创建第5章README文件
cat > "$BASE_DIR/第5章-音频基础知识/README.md" << 'EOF'
---
title: 音频基础知识
icon: audio-basics
order: 5
---

# 音频基础知识

本章介绍音频开发的基础知识和核心概念。
EOF

# 创建5.1音视频处理流程文件
cat > "$BASE_DIR/第5章-音频基础知识/5.1-音视频处理流程.md" << 'EOF'
---
title: 音视频处理流程
icon: av-process
order: 1
---

# 音视频处理流程

## 采集阶段
- 音频采集
- 视频采集
- 设备控制
- 参数设置
- 数据缓冲

## 处理阶段
- 数据编码
- 格式转换
- 滤镜处理
- 特效添加
- 音视频同步

## 传输阶段
- 数据封装
- 网络传输
- 流媒体协议
- 缓冲控制
- 错误处理

## 播放阶段
- 解码播放
- 同步控制
- 渲染显示
- 音频输出
- 性能优化
EOF

# 创建5.2声音的产生与传播文件
cat > "$BASE_DIR/第5章-音频基础知识/5.2-声音的产生与传播.md" << 'EOF'
---
title: 声音的产生与传播
icon: sound-basics
order: 2
---

# 声音的产生与传播

## 声音本质
- 振动原理
- 波动特性
- 传播介质
- 声波特征
- 能量转换

## 传播特性
- 传播速度
- 反射折射
- 衍射干涉
- 多普勒效应
- 声音衰减

## 声学特性
- 频率特性
- 响度特性
- 音色特性
- 相位特性
- 空间特性

## 应用实践
- 声音采集
- 声音处理
- 声音合成
- 声音识别
- 声音增强
EOF

# 创建5.3声音的三要素文件
cat > "$BASE_DIR/第5章-音频基础知识/5.3-声音的三要素.md" << 'EOF'
---
title: 声音的三要素
icon: sound-elements
order: 3
---

# 声音的三要素

## 音调
- 频率特性
- 音高变化
- 音阶关系
- 音调测量
- 音调处理

## 音量
- 振幅特性
- 分贝计算
- 响度曲线
- 音量控制
- 动态范围

## 音色
- 谐波结构
- 频谱分析
- 音色特征
- 音色识别
- 音色合成

## 应用实践
- 音频处理
- 音效制作
- 音质增强
- 音频分析
- 音频合成
EOF

# 创建5.4模数转换文件
cat > "$BASE_DIR/第5章-音频基础知识/5.4-模数转换.md" << 'EOF'
---
title: 模数转换
icon: adc-conversion
order: 4
---

# 模数转换

## 采样原理
- 采样定理
- 采样频率
- 量化精度
- 采样误差
- 抗混叠

## 量化过程
- 量化等级
- 量化噪声
- 动态范围
- 线性量化
- 非线性量化

## 编码方式
- PCM编码
- 压缩编码
- 差分编码
- 自适应编码
- 无损编码

## 实践应用
- 转换技术
- 误差控制
- 性能优化
- 质量评估
- 应用场景
EOF

# 创建5.5PCM与WAV文件
cat > "$BASE_DIR/第5章-音频基础知识/5.5-PCM与WAV.md" << 'EOF'
---
title: PCM与WAV
icon: audio-format
order: 5
---

# PCM与WAV

## PCM格式
- 数据结构
- 采样格式
- 存储方式
- 位深度
- 通道数

## WAV格式
- 文件结构
- 头部信息
- 数据块
- 格式标识
- 扩展信息

## 格式转换
- PCM转WAV
- WAV解析
- 数据处理
- 格式验证
- 质量控制

## 实践应用
- 音频采集
- 音频处理
- 音频播放
- 格式转换
- 性能优化
EOF
BASE_DIR="c:\project\kphub\src\audio-video"

# 创建第6章目录
mkdir -p "$BASE_DIR/第6章-实战音频采集"

# 创建第6章README文件
cat > "$BASE_DIR/第6章-实战音频采集/README.md" << 'EOF'
---
title: 实战音频采集
icon: audio-capture
order: 6
---

# 实战音频采集

本章介绍音频采集的实战应用，包括命令行采集和Mac应用开发。
EOF

# 创建6.1命令行采集音频数据文件
cat > "$BASE_DIR/第6章-实战音频采集/6.1-命令行采集音频数据.md" << 'EOF'
---
title: 命令行采集音频数据
icon: cli-capture
order: 1
---

# 命令行采集音频数据

## 采集基础
- 设备选择
- 参数配置
- 数据格式
- 缓冲设置
- 错误处理

## 实现流程
- 设备初始化
- 数据采集
- 数据处理
- 数据存储
- 资源释放

## 命令行工具
- 参数解析
- 交互设计
- 进度显示
- 错误提示
- 日志记录

## 最佳实践
- 性能优化
- 异常处理
- 资源管理
- 调试技巧
- 注意事项
EOF

# 创建6.2Swift语法一文件
cat > "$BASE_DIR/第6章-实战音频采集/6.2-Swift语法一.md" << 'EOF'
---
title: Swift语法一
icon: swift-basic
order: 2
---

# Swift语法一

## 基础语法
- 变量常量
- 基本类型
- 运算符
- 控制流
- 函数定义

## 集合类型
- 数组
- 字典
- 集合
- 元组
- 序列

## 面向对象
- 类定义
- 属性方法
- 继承多态
- 构造析构
- 访问控制

## 最佳实践
- 代码规范
- 性能优化
- 内存管理
- 调试技巧
- 注意事项
EOF

# 创建6.3Swift语法二文件
cat > "$BASE_DIR/第6章-实战音频采集/6.3-Swift语法二.md" << 'EOF'
---
title: Swift语法二
icon: swift-advanced
order: 3
---

# Swift语法二

## 高级特性
- 泛型
- 协议
- 扩展
- 错误处理
- 并发编程

## 函数式编程
- 闭包
- 高阶函数
- 函数式特性
- 链式调用
- 响应式编程

## 内存管理
- ARC机制
- 循环引用
- 弱引用
- 未占用引用
- 内存泄漏

## 最佳实践
- 设计模式
- 代码优化
- 调试技巧
- 性能优化
- 注意事项
EOF

# 创建6.4创建Mac App文件
cat > "$BASE_DIR/第6章-实战音频采集/6.4-创建Mac App.md" << 'EOF'
---
title: 创建Mac App
icon: mac-app
order: 4
---

# 创建Mac App

## 项目创建
- 工程配置
- 目录结构
- 资源管理
- 依赖设置
- 编译配置

## 界面设计
- 窗口布局
- 控件使用
- 事件处理
- 动画效果
- 主题样式

## 功能实现
- 业务逻辑
- 数据处理
- 网络通信
- 本地存储
- 多线程处理

## 最佳实践
- 架构设计
- 性能优化
- 调试技巧
- 发布部署
- 注意事项
EOF

# 创建6.5创建Button文件
cat > "$BASE_DIR/第6章-实战音频采集/6.5-创建Button.md" << 'EOF'
---
title: 创建Button
icon: button-design
order: 5
---

# 创建Button

## 基础实现
- 按钮创建
- 属性设置
- 样式定制
- 事件绑定
- 状态管理

## 交互设计
- 点击效果
- 状态切换
- 动画效果
- 手势识别
- 无障碍支持

## 高级特性
- 自定义样式
- 图文混排
- 边框效果
- 渐变背景
- 阴影效果

## 最佳实践
- 复用设计
- 性能优化
- 内存管理
- 调试技巧
- 注意事项
EOF

# 创建6.6Swift调用C语言文件
cat > "$BASE_DIR/第6章-实战音频采集/6.6-Swift调用C语言.md" << 'EOF'
---
title: Swift调用C语言
icon: swift-c
order: 6
---

# Swift调用C语言

## 基础知识
- 桥接原理
- 类型映射
- 函数调用
- 指针操作
- 内存管理

## 实现方法
- 桥接头文件
- 模块封装
- 数据转换
- 错误处理
- 性能优化

## 高级应用
- 回调函数
- 结构体处理
- 指针操作
- 内存管理
- 异常处理

## 最佳实践
- 接口设计
- 性能优化
- 内存管理
- 调试技巧
- 注意事项
EOF
BASE_DIR="c:\project\kphub\src\audio-video"

# 创建6.7引入ffmpeg库文件
cat > "$BASE_DIR/第6章-实战音频采集/6.7-引入ffmpeg库.md" << 'EOF'
---
title: 引入ffmpeg库
icon: ffmpeg-lib
order: 7
---

# 引入ffmpeg库

## 环境配置
- 库文件导入
- 头文件配置
- 链接设置
- 版本管理
- 依赖处理

## 接口封装
- 核心API
- 错误处理
- 类型转换
- 内存管理
- 资源释放

## 功能实现
- 初始化配置
- 设备管理
- 数据处理
- 编解码
- 格式转换

## 最佳实践
- 接口设计
- 性能优化
- 内存管理
- 调试技巧
- 注意事项
EOF

# 创建6.8打开音频设备文件
cat > "$BASE_DIR/第6章-实战音频采集/6.8-打开音频设备.md" << 'EOF'
---
title: 打开音频设备
icon: audio-device
order: 8
---

# 打开音频设备

## 设备管理
- 设备枚举
- 设备选择
- 参数配置
- 状态监控
- 错误处理

## 初始化流程
- 设备打开
- 格式设置
- 缓冲配置
- 回调设置
- 资源分配

## 错误处理
- 异常检测
- 错误恢复
- 日志记录
- 状态报告
- 资源清理

## 最佳实践
- 设备选择
- 参数优化
- 性能调优
- 调试方法
- 注意事项
EOF

# 创建6.9读取音频数据文件
cat > "$BASE_DIR/第6章-实战音频采集/6.9-读取音频数据.md" << 'EOF'
---
title: 读取音频数据
icon: audio-read
order: 9
---

# 读取音频数据

## 数据读取
- 缓冲管理
- 同步读取
- 异步读取
- 数据格式
- 错误处理

## 数据处理
- 格式转换
- 数据过滤
- 音量控制
- 降噪处理
- 实时处理

## 性能优化
- 缓冲策略
- 线程管理
- 内存优化
- CPU优化
- 延迟控制

## 最佳实践
- 读取策略
- 错误处理
- 性能优化
- 调试方法
- 注意事项
EOF

# 创建6.10代码优化文件
cat > "$BASE_DIR/第6章-实战音频采集/6.10-代码优化.md" << 'EOF'
---
title: 代码优化
icon: code-optimize
order: 10
---

# 代码优化

## 结构优化
- 代码重构
- 模块划分
- 接口设计
- 异常处理
- 资源管理

## 性能优化
- 算法优化
- 内存管理
- 线程优化
- 缓存策略
- IO优化

## 代码质量
- 代码规范
- 注释文档
- 单元测试
- 代码审查
- 版本控制

## 最佳实践
- 设计模式
- 性能调优
- 调试技巧
- 维护策略
- 注意事项
EOF

# 创建6.11录制音频数据文件
cat > "$BASE_DIR/第6章-实战音频采集/6.11-录制音频数据.md" << 'EOF'
---
title: 录制音频数据
icon: audio-record
order: 11
---

# 录制音频数据

## 录制流程
- 设备初始化
- 参数配置
- 数据采集
- 数据存储
- 资源释放

## 数据处理
- 格式转换
- 音频编码
- 文件写入
- 缓冲管理
- 错误处理

## 控制管理
- 开始录制
- 暂停继续
- 停止录制
- 状态监控
- 错误恢复

## 最佳实践
- 录制策略
- 性能优化
- 质量控制
- 调试方法
- 注意事项
EOF

# 创建6.12界面控制录制文件
cat > "$BASE_DIR/第6章-实战音频采集/6.12-界面控制录制.md" << 'EOF'
---
title: 界面控制录制
icon: ui-control
order: 12
---

# 界面控制录制

## 界面设计
- 控件布局
- 事件绑定
- 状态显示
- 交互设计
- 样式美化

## 控制逻辑
- 录制控制
- 状态管理
- 参数设置
- 错误处理
- 数据显示

## 功能实现
- 开始录制
- 暂停继续
- 停止保存
- 进度显示
- 状态反馈

## 最佳实践
- 界面优化
- 交互体验
- 性能优化
- 调试方法
- 注意事项
EOF

# 创建6.13采集音频数据命令文件
cat > "$BASE_DIR/第6章-实战音频采集/6.13-采集音频数据命令.md" << 'EOF'
---
title: 采集音频数据命令
icon: audio-command
order: 13
---

# 采集音频数据命令

## 命令设计
- 参数定义
- 选项解析
- 帮助信息
- 错误提示
- 使用说明

## 功能实现
- 设备控制
- 数据采集
- 文件保存
- 状态显示
- 错误处理

## 交互设计
- 命令提示
- 进度显示
- 状态反馈
- 错误提示
- 帮助信息

## 最佳实践
- 命令设计
- 参数处理
- 错误处理
- 调试方法
- 注意事项
EOF
BASE_DIR="c:\project\kphub\src\audio-video"

# 创建6.14打开设备文件
cat > "$BASE_DIR/第6章-实战音频采集/6.14-打开设备.md" << 'EOF'
---
title: 打开设备
icon: device-open
order: 14
---

# 打开设备

## 设备操作
- 设备枚举
- 设备选择
- 设备打开
- 参数设置
- 错误处理

## 初始化流程
- 资源分配
- 参数配置
- 状态检查
- 错误恢复
- 资源释放

## 异常处理
- 错误类型
- 错误检测
- 错误恢复
- 日志记录
- 状态报告

## 最佳实践
- 设备管理
- 性能优化
- 资源控制
- 调试方法
- 注意事项
EOF

# 创建6.15音频设备参数修改文件
cat > "$BASE_DIR/第6章-实战音频采集/6.15-音频设备参数修改.md" << 'EOF'
---
title: 音频设备参数修改
icon: device-params
order: 15
---

# 音频设备参数修改

## 参数类型
- 采样率
- 通道数
- 位深度
- 缓冲大小
- 格式设置

## 修改流程
- 参数验证
- 参数设置
- 效果确认
- 错误处理
- 状态更新

## 优化调整
- 性能优化
- 质量控制
- 延迟控制
- 资源管理
- 兼容性处理

## 最佳实践
- 参数选择
- 性能调优
- 质量保证
- 调试方法
- 注意事项
EOF

# 创建6.16获取音频设备参数文件
cat > "$BASE_DIR/第6章-实战音频采集/6.16-获取音频设备参数.md" << 'EOF'
---
title: 获取音频设备参数
icon: device-info
order: 16
---

# 获取音频设备参数

## 参数获取
- 设备信息
- 当前配置
- 支持格式
- 性能参数
- 状态信息

## 数据处理
- 参数解析
- 数据转换
- 格式验证
- 信息展示
- 错误处理

## 应用场景
- 设备检测
- 参数调优
- 状态监控
- 问题诊断
- 性能分析

## 最佳实践
- 参数管理
- 信息展示
- 错误处理
- 调试方法
- 注意事项
EOF

# 创建6.17采集音频数据错误分析文件
cat > "$BASE_DIR/第6章-实战音频采集/6.17-采集音频数据错误分析.md" << 'EOF'
---
title: 采集音频数据错误分析
icon: error-analysis
order: 17
---

# 采集音频数据错误分析

## 错误类型
- 设备错误
- 参数错误
- 资源错误
- 操作错误
- 系统错误

## 分析方法
- 错误定位
- 原因分析
- 日志分析
- 状态检查
- 性能分析

## 解决方案
- 错误处理
- 参数调整
- 资源优化
- 代码修复
- 性能优化

## 最佳实践
- 错误预防
- 监控告警
- 调试技巧
- 优化建议
- 注意事项
EOF

# 创建第7章目录
mkdir -p "$BASE_DIR/第7章-音频编码原理"

# 创建第7章README文件
cat > "$BASE_DIR/第7章-音频编码原理/README.md" << 'EOF'
---
title: 音频编码原理
icon: audio-encoding
order: 7
---

# 音频编码原理

本章介绍音频编码的基本原理和核心技术。
EOF

# 创建7.1音频有损压缩技术文件
cat > "$BASE_DIR/第7章-音频编码原理/7.1-音频有损压缩技术.md" << 'EOF'
---
title: 音频有损压缩技术
icon: lossy-compression
order: 1
---

# 音频有损压缩技术

## 基本原理
- 听觉模型
- 频率掩蔽
- 时域掩蔽
- 量化编码
- 熵编码

## 压缩算法
- MP3编码
- AAC编码
- Opus编码
- Vorbis编码
- 压缩比控制

## 质量控制
- 码率控制
- 失真控制
- 音质评估
- 兼容性
- 性能优化

## 最佳实践
- 参数选择
- 质量控制
- 性能优化
- 应用场景
- 注意事项
EOF
BASE_DIR="c:\project\kphub\src\audio-video"

# 创建7.2音频无损压缩技术文件
cat > "$BASE_DIR/第7章-音频编码原理/7.2-音频无损压缩技术.md" << 'EOF'
---
title: 音频无损压缩技术
icon: lossless-compression
order: 2
---

# 音频无损压缩技术

## 基本原理
- 熵编码
- 预测编码
- 游程编码
- 字典编码
- 差分编码

## 压缩算法
- FLAC编码
- ALAC编码
- APE编码
- WavPack
- 压缩比控制

## 应用场景
- 音乐存储
- 专业录音
- 音频归档
- 音质保真
- 数据备份

## 最佳实践
- 算法选择
- 参数优化
- 性能调优
- 应用场景
- 注意事项
EOF

# 创建7.3编解码器比较文件
cat > "$BASE_DIR/第7章-音频编码原理/7.3-编解码器比较.md" << 'EOF'
---
title: 编解码器比较
icon: codec-comparison
order: 3
---

# 编解码器比较

## 有损编码器
- MP3特点
- AAC特点
- Opus特点
- Vorbis特点
- 应用场景

## 无损编码器
- FLAC特点
- ALAC特点
- APE特点
- WavPack特点
- 应用场景

## 性能对比
- 压缩比率
- 音质评估
- 编码速度
- 解码速度
- 资源消耗

## 选择建议
- 场景匹配
- 性能要求
- 质量要求
- 兼容性
- 成本考虑
EOF

# 创建7.4AAC编码器介绍文件
cat > "$BASE_DIR/第7章-音频编码原理/7.4-AAC编码器介绍.md" << 'EOF'
---
title: AAC编码器介绍
icon: aac-codec
order: 4
---

# AAC编码器介绍

## 基本原理
- 编码框架
- 心理声学模型
- 频率变换
- 量化编码
- 熵编码

## 编码特性
- 编码模式
- 码率控制
- 质量控制
- 延迟控制
- 错误恢复

## 编码工具
- 编码器选择
- 参数配置
- 性能优化
- 质量控制
- 调试方法

## 最佳实践
- 参数选择
- 性能优化
- 质量控制
- 应用场景
- 注意事项
EOF

# 创建7.5ADTS格式文件
cat > "$BASE_DIR/第7章-音频编码原理/7.5-ADTS格式.md" << 'EOF'
---
title: ADTS格式
icon: adts-format
order: 5
---

# ADTS格式

## 格式结构
- 帧头结构
- 数据结构
- 同步字段
- 配置信息
- CRC校验

## 解析方法
- 帧同步
- 参数解析
- 数据提取
- 错误检测
- 格式转换

## 应用场景
- 流媒体传输
- 文件存储
- 实时编码
- 音频播放
- 格式转换

## 最佳实践
- 格式处理
- 错误处理
- 性能优化
- 应用场景
- 注意事项
EOF

# 创建7.6ffmpeg生成AAC数据文件
cat > "$BASE_DIR/第7章-音频编码原理/7.6-ffmpeg生成AAC数据.md" << 'EOF'
---
title: ffmpeg生成AAC数据
icon: ffmpeg-aac
order: 6
---

# ffmpeg生成AAC数据

## 编码流程
- 输入处理
- 参数配置
- 编码过程
- 数据输出
- 错误处理

## 参数设置
- 编码器选择
- 码率设置
- 采样率
- 通道数
- 格式选项

## 命令使用
- 基本命令
- 参数说明
- 选项配置
- 输出控制
- 错误处理

## 最佳实践
- 参数优化
- 质量控制
- 性能调优
- 应用场景
- 注意事项
EOF

# 创建第8章目录
mkdir -p "$BASE_DIR/第8章-实战音频编码"

# 创建第8章README文件
cat > "$BASE_DIR/第8章-实战音频编码/README.md" << 'EOF'
---
title: 实战音频编码
icon: audio-encoding-practice
order: 8
---

# 实战音频编码

本章介绍音频编码的实战应用，包括编码器的使用和优化。
EOF
BASE_DIR="c:\project\kphub\src\audio-video"

# 创建8.1音频重采样文件
cat > "$BASE_DIR/第8章-实战音频编码/8.1-音频重采样.md" << 'EOF'
---
title: 音频重采样
icon: audio-resampling
order: 1
---

# 音频重采样

## 基本概念
- 采样率转换
- 通道数转换
- 位深度转换
- 格式转换
- 质量控制

## 重采样算法
- 线性插值
- 多相滤波
- 样条插值
- 频域重采样
- 质量参数

## 实现方法
- 参数配置
- 数据处理
- 缓冲管理
- 错误处理
- 性能优化

## 最佳实践
- 算法选择
- 参数优化
- 质量控制
- 性能调优
- 注意事项
EOF

# 创建8.2实战音频重采样1文件
cat > "$BASE_DIR/第8章-实战音频编码/8.2-实战音频重采样1.md" << 'EOF'
---
title: 实战音频重采样1
icon: resampling-practice1
order: 2
---

# 实战音频重采样1

## 环境准备
- 开发环境
- 依赖安装
- 工具配置
- 参数设置
- 测试数据

## 代码实现
- 初始化配置
- 数据读取
- 重采样处理
- 数据输出
- 资源释放

## 功能测试
- 参数验证
- 功能测试
- 性能测试
- 质量评估
- 问题排查

## 最佳实践
- 代码优化
- 性能调优
- 质量控制
- 调试技巧
- 注意事项
EOF

# 创建8.3实战音频重采样2文件
cat > "$BASE_DIR/第8章-实战音频编码/8.3-实战音频重采样2.md" << 'EOF'
---
title: 实战音频重采样2
icon: resampling-practice2
order: 3
---

# 实战音频重采样2

## 高级特性
- 多通道处理
- 批量处理
- 实时处理
- 质量控制
- 性能优化

## 实现优化
- 算法优化
- 内存优化
- 并发处理
- 缓存策略
- 错误处理

## 性能测试
- 基准测试
- 压力测试
- 内存分析
- CPU分析
- 性能优化

## 最佳实践
- 架构设计
- 代码优化
- 性能调优
- 调试技巧
- 注意事项
EOF

# 创建8.4创建AAC编码器1文件
cat > "$BASE_DIR/第8章-实战音频编码/8.4-创建AAC编码器1.md" << 'EOF'
---
title: 创建AAC编码器1
icon: aac-encoder1
order: 4
---

# 创建AAC编码器1

## 初始化配置
- 编码器选择
- 参数设置
- 资源分配
- 状态初始化
- 错误处理

## 基础实现
- 编码器创建
- 参数配置
- 缓冲管理
- 状态控制
- 资源管理

## 功能测试
- 参数验证
- 功能测试
- 性能测试
- 质量评估
- 问题排查

## 最佳实践
- 代码优化
- 性能调优
- 质量控制
- 调试技巧
- 注意事项
EOF

# 创建8.5创建AAC编码器2文件
cat > "$BASE_DIR/第8章-实战音频编码/8.5-创建AAC编码器2.md" << 'EOF'
---
title: 创建AAC编码器2
icon: aac-encoder2
order: 5
---

# 创建AAC编码器2

## 高级特性
- 多实例支持
- 并发处理
- 实时编码
- 质量控制
- 性能优化

## 实现优化
- 算法优化
- 内存优化
- 并发处理
- 缓存策略
- 错误处理

## 性能测试
- 基准测试
- 压力测试
- 内存分析
- CPU分析
- 性能优化

## 最佳实践
- 架构设计
- 代码优化
- 性能调优
- 调试技巧
- 注意事项
EOF

# 创建8.6编码输入输出数据文件
cat > "$BASE_DIR/第8章-实战音频编码/8.6-编码输入输出数据.md" << 'EOF'
---
title: 编码输入输出数据
icon: codec-io
order: 6
---

# 编码输入输出数据

## 数据流处理
- 输入格式
- 输出格式
- 数据转换
- 缓冲管理
- 同步控制

## 实现方法
- 数据读取
- 数据处理
- 数据写入
- 错误处理
- 资源管理

## 优化策略
- 缓冲优化
- 并发处理
- 内存管理
- 性能优化
- 质量控制

## 最佳实践
- 设计模式
- 代码优化
- 性能调优
- 调试技巧
- 注意事项
EOF

# 创建8.7AAC编码过程1文件
cat > "$BASE_DIR/第8章-实战音频编码/8.7-AAC编码过程1.md" << 'EOF'
---
title: AAC编码过程1
icon: aac-process1
order: 7
---

# AAC编码过程1

## 编码流程
- 数据预处理
- 频谱分析
- 心理声学模型
- 量化编码
- 熵编码

## 实现细节
- 帧同步
- 数据分帧
- 变换编码
- 比特分配
- 数据打包

## 优化策略
- 算法优化
- 内存优化
- 并发处理
- 缓存策略
- 错误处理

## 最佳实践
- 参数选择
- 性能优化
- 质量控制
- 调试技巧
- 注意事项
EOF
BASE_DIR="c:\project\kphub\src\audio-video"

# 创建8.8AAC编码过程2文件
cat > "$BASE_DIR/第8章-实战音频编码/8.8-AAC编码过程2.md" << 'EOF'
---
title: AAC编码过程2
icon: aac-process2
order: 8
---

# AAC编码过程2

## 高级特性
- 多通道编码
- 动态码率控制
- 质量控制
- 延迟控制
- 错误恢复

## 优化实现
- 并行处理
- 缓存优化
- 内存管理
- 性能优化
- 资源控制

## 调试分析
- 性能分析
- 内存分析
- 质量评估
- 问题诊断
- 优化建议

## 最佳实践
- 参数配置
- 性能优化
- 质量控制
- 调试技巧
- 注意事项
EOF

# 创建8.9代码优化1文件
cat > "$BASE_DIR/第8章-实战音频编码/8.9-代码优化1.md" << 'EOF'
---
title: 代码优化1
icon: code-optimize1
order: 9
---

# 代码优化1

## 结构优化
- 代码重构
- 模块划分
- 接口设计
- 异常处理
- 资源管理

## 算法优化
- 计算优化
- 内存优化
- 缓存策略
- 并发处理
- 性能提升

## 代码质量
- 代码规范
- 注释文档
- 单元测试
- 代码审查
- 版本控制

## 最佳实践
- 设计模式
- 性能调优
- 调试技巧
- 维护策略
- 注意事项
EOF

# 创建8.10代码优化2文件
cat > "$BASE_DIR/第8章-实战音频编码/8.10-代码优化2.md" << 'EOF'
---
title: 代码优化2
icon: code-optimize2
order: 10
---

# 代码优化2

## 性能优化
- CPU优化
- 内存优化
- IO优化
- 并发优化
- 缓存优化

## 资源管理
- 内存管理
- 线程管理
- 文件管理
- 网络资源
- 系统资源

## 调试分析
- 性能分析
- 内存分析
- 代码分析
- 问题诊断
- 优化建议

## 最佳实践
- 优化策略
- 性能监控
- 调试技巧
- 维护方法
- 注意事项
EOF

# 创建8.11代码优化3文件
cat > "$BASE_DIR/第8章-实战音频编码/8.11-代码优化3.md" << 'EOF'
---
title: 代码优化3
icon: code-optimize3
order: 11
---

# 代码优化3

## 高级优化
- 编译优化
- 链接优化
- 运行时优化
- 系统调优
- 平台适配

## 工具应用
- 性能工具
- 调试工具
- 分析工具
- 监控工具
- 优化工具

## 实践技巧
- 优化方法
- 调试技巧
- 问题排查
- 性能调优
- 经验总结

## 最佳实践
- 优化策略
- 工具使用
- 调试方法
- 维护技巧
- 注意事项
EOF

# 创建第9章目录
mkdir -p "$BASE_DIR/第9章-视频基础知识"

# 创建第9章README文件
cat > "$BASE_DIR/第9章-视频基础知识/README.md" << 'EOF'
---
title: 视频基础知识
icon: video-basics
order: 9
---

# 视频基础知识

本章介绍视频开发的基础知识和核心概念。
EOF

# 创建9.1图像基本概念文件
cat > "$BASE_DIR/第9章-视频基础知识/9.1-图像基本概念.md" << 'EOF'
---
title: 图像基本概念
icon: image-basics
order: 1
---

# 图像基本概念

## 基础概念
- 像素定义
- 分辨率
- 色彩空间
- 图像格式
- 压缩编码

## 图像特性
- 亮度对比
- 色彩饱和
- 色彩平衡
- 锐度清晰
- 噪点控制

## 处理技术
- 图像增强
- 色彩调整
- 滤镜效果
- 图像变换
- 特效处理

## 最佳实践
- 参数选择
- 质量控制
- 性能优化
- 应用场景
- 注意事项
EOF
BASE_DIR="c:\project\kphub\src\audio-video"

# 创建9.2屏幕显示器文件
cat > "$BASE_DIR/第9章-视频基础知识/9.2-屏幕显示器.md" << 'EOF'
---
title: 屏幕显示器
icon: display
order: 2
---

# 屏幕显示器

## 显示原理
- 显示技术
- 刷新机制
- 分辨率
- 色彩深度
- 显示标准

## 显示参数
- 刷新率
- 响应时间
- 对比度
- 亮度
- 色域

## 接口技术
- HDMI
- DisplayPort
- VGA
- DVI
- Type-C

## 最佳实践
- 参数选择
- 质量控制
- 性能优化
- 应用场景
- 注意事项
EOF

# 创建9.3码流计算文件
cat > "$BASE_DIR/第9章-视频基础知识/9.3-码流计算.md" << 'EOF'
---
title: 码流计算
icon: bitrate
order: 3
---

# 码流计算

## 基础概念
- 码率定义
- 带宽要求
- 压缩比率
- 质量关系
- 存储需求

## 计算方法
- 原始码率
- 压缩码率
- 传输码率
- 存储容量
- 带宽需求

## 优化策略
- 码率控制
- 质量平衡
- 带宽优化
- 存储优化
- 实时性能

## 最佳实践
- 参数选择
- 质量控制
- 性能优化
- 应用场景
- 注意事项
EOF

# 创建9.4图像显示文件
cat > "$BASE_DIR/第9章-视频基础知识/9.4-图像显示.md" << 'EOF'
---
title: 图像显示
icon: image-display
order: 4
---

# 图像显示

## 显示原理
- 图像渲染
- 缓冲机制
- 同步技术
- 显示控制
- 性能优化

## 显示技术
- 硬件加速
- 软件渲染
- 双缓冲
- 垂直同步
- 帧率控制

## 实现方法
- 显示初始化
- 图像绘制
- 刷新控制
- 同步处理
- 资源管理

## 最佳实践
- 性能优化
- 质量控制
- 同步处理
- 调试技巧
- 注意事项
EOF

# 创建9.5YUV概述文件
cat > "$BASE_DIR/第9章-视频基础知识/9.5-YUV概述.md" << 'EOF'
---
title: YUV概述
icon: yuv-intro
order: 5
---

# YUV概述

## 基础概念
- YUV定义
- 色彩空间
- 采样方式
- 格式类型
- 应用场景

## 技术特点
- 亮度分量
- 色度分量
- 带宽效率
- 压缩特性
- 转换关系

## 应用优势
- 压缩效率
- 兼容性
- 处理性能
- 存储效率
- 传输优势

## 最佳实践
- 格式选择
- 转换处理
- 性能优化
- 应用场景
- 注意事项
EOF

# 创建9.6YUV常见格式文件
cat > "$BASE_DIR/第9章-视频基础知识/9.6-YUV常见格式.md" << 'EOF'
---
title: YUV常见格式
icon: yuv-formats
order: 6
---

# YUV常见格式

## 采样格式
- YUV420
- YUV422
- YUV444
- YUV400
- 格式特点

## 存储方式
- 平面格式
- 打包格式
- 混合格式
- 存储效率
- 访问特性

## 应用场景
- 视频编码
- 图像处理
- 显示输出
- 格式转换
- 性能要求

## 最佳实践
- 格式选择
- 转换处理
- 性能优化
- 应用场景
- 注意事项
EOF

# 创建9.7YUV存储格式文件
cat > "$BASE_DIR/第9章-视频基础知识/9.7-YUV存储格式.md" << 'EOF'
---
title: YUV存储格式
icon: yuv-storage
order: 7
---

# YUV存储格式

## 存储结构
- 内存布局
- 数据对齐
- 访问方式
- 缓冲管理
- 存储优化

## 格式特点
- 平面存储
- 打包存储
- 混合存储
- 存储效率
- 访问性能

## 处理方法
- 数据读写
- 格式转换
- 内存管理
- 性能优化
- 资源控制

## 最佳实践
- 格式选择
- 存储优化
- 性能调优
- 应用场景
- 注意事项
EOF

# 创建9.8YUV实战文件
cat > "$BASE_DIR/第9章-视频基础知识/9.8-YUV实战.md" << 'EOF'
---
title: YUV实战
icon: yuv-practice
order: 8
---

# YUV实战

## 实现基础
- 格式处理
- 数据转换
- 内存管理
- 性能优化
- 错误处理

## 功能实现
- 读写操作
- 格式转换
- 图像处理
- 显示输出
- 性能优化

## 应用案例
- 视频编码
- 图像处理
- 显示输出
- 格式转换
- 性能优化

## 最佳实践
- 实现策略
- 性能优化
- 质量控制
- 调试技巧
- 注意事项
EOF
BASE_DIR="c:\project\kphub\src\audio-video"

# 创建9.9实战采集视频数据1文件
cat > "$BASE_DIR/第9章-视频基础知识/9.9-实战采集视频数据1.md" << 'EOF'
---
title: 实战采集视频数据1
icon: video-capture1
order: 9
---

# 实战采集视频数据1

## 采集准备
- 设备选择
- 参数配置
- 初始化设置
- 缓冲管理
- 错误处理

## 实现流程
- 设备打开
- 参数设置
- 数据采集
- 格式转换
- 数据存储

## 性能优化
- 采集效率
- 内存管理
- 并发处理
- 缓存策略
- 实时性能

## 最佳实践
- 采集策略
- 性能优化
- 质量控制
- 调试技巧
- 注意事项
EOF

# 创建9.10实战采集视频数据2文件
cat > "$BASE_DIR/第9章-视频基础知识/9.10-实战采集视频数据2.md" << 'EOF'
---
title: 实战采集视频数据2
icon: video-capture2
order: 10
---

# 实战采集视频数据2

## 高级特性
- 多路采集
- 实时处理
- 同步控制
- 质量控制
- 性能优化

## 功能实现
- 数据处理
- 格式转换
- 编码压缩
- 存储管理
- 错误处理

## 调试优化
- 性能分析
- 内存分析
- 问题诊断
- 优化建议
- 调试技巧

## 最佳实践
- 实现策略
- 性能优化
- 质量控制
- 调试方法
- 注意事项
EOF

# 创建第10章目录
mkdir -p "$BASE_DIR/第10章-H264编码原理"

# 创建第10章README文件
cat > "$BASE_DIR/第10章-H264编码原理/README.md" << 'EOF'
---
title: H264编码原理
icon: h264-basics
order: 10
---

# H264编码原理

本章介绍H264视频编码的基本原理和核心技术。
EOF

# 创建10.1H264压缩与GOP文件
cat > "$BASE_DIR/第10章-H264编码原理/10.1-H264压缩与GOP.md" << 'EOF'
---
title: H264压缩与GOP
icon: h264-compression
order: 1
---

# H264压缩与GOP

## 压缩原理
- 空间压缩
- 时间压缩
- 熵编码
- 预测编码
- 运动补偿

## GOP结构
- GOP定义
- 关键帧
- 帧间关系
- 编码效率
- 解码依赖

## 参数控制
- GOP大小
- 码率控制
- 质量控制
- 延迟控制
- 参考关系

## 最佳实践
- 参数选择
- 性能优化
- 质量控制
- 应用场景
- 注意事项
EOF

# 创建10.2I帧P帧B帧文件
cat > "$BASE_DIR/第10章-H264编码原理/10.2-I帧P帧B帧.md" << 'EOF'
---
title: I帧P帧B帧
icon: frame-types
order: 2
---

# I帧P帧B帧

## 帧类型
- I帧特性
- P帧特性
- B帧特性
- 编码效率
- 解码依赖

## 编码特点
- 压缩比率
- 质量控制
- 延迟影响
- 带宽需求
- 解码复杂度

## 应用场景
- 实时传输
- 存储应用
- 直播系统
- 视频点播
- 质量要求

## 最佳实践
- 帧类型选择
- 参数优化
- 性能调优
- 应用场景
- 注意事项
EOF

# 创建10.3宏块文件
cat > "$BASE_DIR/第10章-H264编码原理/10.3-宏块.md" << 'EOF'
---
title: 宏块
icon: macroblock
order: 3
---

# 宏块

## 基本概念
- 宏块定义
- 大小规格
- 类型划分
- 编码模式
- 预测方式

## 处理方法
- 运动估计
- 运动补偿
- 预测编码
- 变换编码
- 熵编码

## 优化策略
- 预测优化
- 编码优化
- 解码优化
- 性能提升
- 质量控制

## 最佳实践
- 参数选择
- 性能优化
- 质量控制
- 应用场景
- 注意事项
EOF
BASE_DIR="c:\project\kphub\src\audio-video"

# 创建10.4帧内压缩技术文件
cat > "$BASE_DIR/第10章-H264编码原理/10.4-帧内压缩技术.md" << 'EOF'
---
title: 帧内压缩技术
icon: intra-compression
order: 4
---

# 帧内压缩技术

## 压缩原理
- 空间冗余
- 预测编码
- 变换编码
- 量化编码
- 熵编码

## 预测模式
- 方向预测
- 平面预测
- DC预测
- 模式选择
- 预测优化

## 编码流程
- 块划分
- 预测处理
- 残差编码
- 重建处理
- 滤波处理

## 最佳实践
- 模式选择
- 参数优化
- 性能调优
- 质量控制
- 注意事项
EOF

# 创建10.5帧间压缩技术文件
cat > "$BASE_DIR/第10章-H264编码原理/10.5-帧间压缩技术.md" << 'EOF'
---
title: 帧间压缩技术
icon: inter-compression
order: 5
---

# 帧间压缩技术

## 压缩原理
- 时间冗余
- 运动估计
- 运动补偿
- 残差编码
- 熵编码

## 运动估计
- 搜索算法
- 块匹配
- 运动向量
- 预测模式
- 精度控制

## 编码流程
- 参考帧选择
- 运动估计
- 运动补偿
- 残差编码
- 重建处理

## 最佳实践
- 算法选择
- 参数优化
- 性能调优
- 质量控制
- 注意事项
EOF

# 创建10.6无损压缩与编解码流程文件
cat > "$BASE_DIR/第10章-H264编码原理/10.6-无损压缩与编解码流程.md" << 'EOF'
---
title: 无损压缩与编解码流程
icon: lossless-codec
order: 6
---

# 无损压缩与编解码流程

## 无损压缩
- 熵编码
- CABAC
- CAVLC
- 压缩效率
- 计算复杂度

## 编码流程
- 预处理
- 预测编码
- 变换量化
- 熵编码
- 码流封装

## 解码流程
- 码流解析
- 熵解码
- 反量化
- 预测重建
- 后处理

## 最佳实践
- 流程优化
- 参数调优
- 性能优化
- 质量控制
- 注意事项
EOF

# 创建10.7H264码流结构文件
cat > "$BASE_DIR/第10章-H264编码原理/10.7-H264码流结构.md" << 'EOF'
---
title: H264码流结构
icon: h264-stream
order: 7
---

# H264码流结构

## 基本单元
- NAL单元
- 序列参数
- 图像参数
- 片参数
- 宏块数据

## 语法结构
- 码流层次
- 语法元素
- 参数集合
- 数据组织
- 语义定义

## 解析处理
- 语法分析
- 参数提取
- 数据重组
- 错误检测
- 同步控制

## 最佳实践
- 结构设计
- 解析优化
- 性能调优
- 错误处理
- 注意事项
EOF

# 创建第11章目录
mkdir -p "$BASE_DIR/第11章-实战视频编码解码"

# 创建第11章README文件
cat > "$BASE_DIR/第11章-实战视频编码解码/README.md" << 'EOF'
---
title: 实战视频编码解码
icon: video-codec
order: 11
---

# 实战视频编码解码

本章介绍视频编码解码的实战应用。
EOF

# 创建11.1H264 Profile与Level文件
cat > "$BASE_DIR/第11章-实战视频编码解码/11.1-H264 Profile与Level.md" << 'EOF'
---
title: H264 Profile与Level
icon: h264-profile
order: 1
---

# H264 Profile与Level

## Profile类型
- Baseline
- Main
- High
- 扩展Profile
- 应用场景

## Level等级
- 分辨率限制
- 码率限制
- 帧率限制
- 缓冲要求
- 计算复杂度

## 选择策略
- 应用需求
- 设备能力
- 带宽限制
- 质量要求
- 兼容性

## 最佳实践
- 参数选择
- 性能优化
- 质量控制
- 应用场景
- 注意事项
EOF
BASE_DIR="c:\project\kphub\src\audio-video"

# 创建11.2SPS重要参数文件
cat > "$BASE_DIR/第11章-实战视频编码解码/11.2-SPS重要参数.md" << 'EOF'
---
title: SPS重要参数
icon: sps-params
order: 2
---

# SPS重要参数

## 基本参数
- 编码等级
- 分辨率
- 帧率
- 码率控制
- 参考帧数

## 高级特性
- 熵编码模式
- 去块滤波
- 多参考帧
- 帧重排序
- 错误恢复

## 参数设置
- 参数配置
- 优化策略
- 性能影响
- 质量控制
- 兼容性

## 最佳实践
- 参数选择
- 性能优化
- 质量控制
- 应用场景
- 注意事项
EOF

# 创建11.3PPS与Slice-Header文件
cat > "$BASE_DIR/第11章-实战视频编码解码/11.3-PPS与Slice-Header.md" << 'EOF'
---
title: PPS与Slice-Header
icon: pps-slice
order: 3
---

# PPS与Slice-Header

## PPS参数
- 熵编码
- 去块滤波
- 加权预测
- 变换系数
- 量化参数

## Slice-Header
- 片类型
- 参考帧
- 量化参数
- 运动向量
- 预测模式

## 参数关系
- 参数继承
- 参数覆盖
- 参数优化
- 性能影响
- 质量控制

## 最佳实践
- 参数配置
- 性能优化
- 质量控制
- 应用场景
- 注意事项
EOF

# 创建11.4H264分析工具1文件
cat > "$BASE_DIR/第11章-实战视频编码解码/11.4-H264分析工具1.md" << 'EOF'
---
title: H264分析工具1
icon: h264-tools1
order: 4
---

# H264分析工具1

## 工具介绍
- 功能特点
- 使用场景
- 操作界面
- 分析能力
- 输出格式

## 基本功能
- 码流解析
- 参数提取
- 统计分析
- 可视化
- 报告生成

## 使用方法
- 工具配置
- 数据导入
- 分析操作
- 结果导出
- 问题诊断

## 最佳实践
- 工具选择
- 分析方法
- 结果解读
- 问题排查
- 注意事项
EOF

# 创建11.5H264分析工具2文件
cat > "$BASE_DIR/第11章-实战视频编码解码/11.5-H264分析工具2.md" << 'EOF'
---
title: H264分析工具2
icon: h264-tools2
order: 5
---

# H264分析工具2

## 高级功能
- 深度分析
- 性能评估
- 质量评估
- 问题诊断
- 优化建议

## 分析方法
- 数据采集
- 参数分析
- 性能分析
- 质量分析
- 问题定位

## 实践应用
- 场景分析
- 参数优化
- 性能调优
- 质量提升
- 问题解决

## 最佳实践
- 分析策略
- 工具使用
- 结果应用
- 优化方法
- 注意事项
EOF

# 创建11.6打开视频编码器1文件
cat > "$BASE_DIR/第11章-实战视频编码解码/11.6-打开视频编码器1.md" << 'EOF'
---
title: 打开视频编码器1
icon: video-encoder1
order: 6
---

# 打开视频编码器1

## 初始化配置
- 编码器选择
- 参数设置
- 资源分配
- 状态初始化
- 错误处理

## 基础实现
- 编码器创建
- 参数配置
- 缓冲管理
- 状态控制
- 资源管理

## 功能测试
- 参数验证
- 功能测试
- 性能测试
- 质量评估
- 问题排查

## 最佳实践
- 实现策略
- 性能优化
- 质量控制
- 调试技巧
- 注意事项
EOF

# 创建11.7打开视频编码器2文件
cat > "$BASE_DIR/第11章-实战视频编码解码/11.7-打开视频编码器2.md" << 'EOF'
---
title: 打开视频编码器2
icon: video-encoder2
order: 7
---

# 打开视频编码器2

## 高级特性
- 多实例支持
- 并发处理
- 实时编码
- 质量控制
- 性能优化

## 实现优化
- 算法优化
- 内存优化
- 并发处理
- 缓存策略
- 错误处理

## 性能测试
- 基准测试
- 压力测试
- 内存分析
- CPU分析
- 性能优化

## 最佳实践
- 架构设计
- 代码优化
- 性能调优
- 调试技巧
- 注意事项
EOF

# 创建11.8准备编码数据文件
cat > "$BASE_DIR/第11章-实战视频编码解码/11.8-准备编码数据.md" << 'EOF'
---
title: 准备编码数据
icon: encode-data
order: 8
---

# 准备编码数据

## 数据准备
- 格式转换
- 预处理
- 缓冲管理
- 同步控制
- 错误处理

## 编码配置
- 参数设置
- 码率控制
- 质量控制
- 延迟控制
- 资源管理

## 优化策略
- 数据优化
- 内存优化
- 性能优化
- 质量优化
- 资源控制

## 最佳实践
- 数据处理
- 参数配置
- 性能调优
- 质量控制
- 注意事项
EOF
BASE_DIR="c:\project\kphub\src\audio-video"

# 创建11.9NV12转YUV420P文件
cat > "$BASE_DIR/第11章-实战视频编码解码/11.9-NV12转YUV420P.md" << 'EOF'
---
title: NV12转YUV420P
icon: format-conversion
order: 9
---

# NV12转YUV420P

## 格式特点
- NV12格式
- YUV420P格式
- 存储布局
- 性能特性
- 应用场景

## 转换实现
- 数据读取
- 格式转换
- 内存管理
- 性能优化
- 错误处理

## 优化策略
- 算法优化
- 内存优化
- SIMD优化
- 并行处理
- 缓存优化

## 最佳实践
- 实现方法
- 性能优化
- 质量控制
- 调试技巧
- 注意事项
EOF

# 创建11.10H264编码实战1文件
cat > "$BASE_DIR/第11章-实战视频编码解码/11.10-H264编码实战1.md" << 'EOF'
---
title: H264编码实战1
icon: h264-practice1
order: 10
---

# H264编码实战1

## 编码准备
- 环境配置
- 参数设置
- 资源分配
- 初始化
- 错误处理

## 基础实现
- 数据输入
- 参数配置
- 编码处理
- 数据输出
- 资源释放

## 功能测试
- 参数验证
- 功能测试
- 性能测试
- 质量评估
- 问题排查

## 最佳实践
- 实现策略
- 性能优化
- 质量控制
- 调试技巧
- 注意事项
EOF

# 创建11.11H264编码实战2文件
cat > "$BASE_DIR/第11章-实战视频编码解码/11.11-H264编码实战2.md" << 'EOF'
---
title: H264编码实战2
icon: h264-practice2
order: 11
---

# H264编码实战2

## 高级特性
- 多线程编码
- 码率控制
- 质量控制
- 延迟控制
- 错误恢复

## 优化实现
- 算法优化
- 内存优化
- 并发处理
- 缓存策略
- 资源管理

## 性能测试
- 基准测试
- 压力测试
- 内存分析
- CPU分析
- 性能优化

## 最佳实践
- 架构设计
- 代码优化
- 性能调优
- 调试技巧
- 注意事项
EOF

# 创建11.12x264参数详解文件
cat > "$BASE_DIR/第11章-实战视频编码解码/11.12-x264参数详解.md" << 'EOF'
---
title: x264参数详解
icon: x264-params
order: 12
---

# x264参数详解

## 基本参数
- 预设参数
- 调优参数
- 码率控制
- 质量控制
- 性能控制

## 高级参数
- 编码控制
- 率失真优化
- 运动估计
- 帧类型控制
- 滤波控制

## 参数优化
- 场景适配
- 性能平衡
- 质量平衡
- 延迟控制
- 资源控制

## 最佳实践
- 参数选择
- 性能优化
- 质量控制
- 应用场景
- 注意事项
EOF

# 创建第12章目录
mkdir -p "$BASE_DIR/第12章-实战RTMP传输"

# 创建第12章README文件
cat > "$BASE_DIR/第12章-实战RTMP传输/README.md" << 'EOF'
---
title: 实战RTMP传输
icon: rtmp-streaming
order: 12
---

# 实战RTMP传输

本章介绍RTMP流媒体传输的实战应用。
EOF

# 创建12.1RTMP连接建立文件
cat > "$BASE_DIR/第12章-实战RTMP传输/12.1-RTMP连接建立.md" << 'EOF'
---
title: RTMP连接建立
icon: rtmp-connection
order: 1
---

# RTMP连接建立

## 连接流程
- 握手过程
- 连接创建
- 会话管理
- 状态控制
- 错误处理

## 协议实现
- 消息格式
- 命令处理
- 数据传输
- 流控制
- 安全机制

## 功能测试
- 连接测试
- 性能测试
- 稳定性测试
- 错误恢复
- 问题诊断

## 最佳实践
- 实现策略
- 性能优化
- 可靠性
- 调试技巧
- 注意事项
EOF
BASE_DIR="c:\project\kphub\src\audio-video"

# 创建12.2创建RTMP流文件
cat > "$BASE_DIR/第12章-实战RTMP传输/12.2-创建RTMP流.md" << 'EOF'
---
title: 创建RTMP流
icon: rtmp-stream
order: 2
---

# 创建RTMP流

## 流创建
- 流初始化
- 参数配置
- 资源分配
- 状态管理
- 错误处理

## 数据处理
- 数据封装
- 消息组织
- 流控制
- 缓冲管理
- 同步控制

## 功能实现
- 推流控制
- 拉流控制
- 数据传输
- 状态监控
- 错误恢复

## 最佳实践
- 实现策略
- 性能优化
- 可靠性
- 调试技巧
- 注意事项
EOF

# 创建12.3RTMP消息文件
cat > "$BASE_DIR/第12章-实战RTMP传输/12.3-RTMP消息.md" << 'EOF'
---
title: RTMP消息
icon: rtmp-message
order: 3
---

# RTMP消息

## 消息类型
- 命令消息
- 数据消息
- 共享对象
- 控制消息
- 用户控制

## 消息结构
- 消息头
- 消息体
- 时间戳
- 消息长度
- 消息流ID

## 处理流程
- 消息解析
- 消息处理
- 消息发送
- 消息接收
- 错误处理

## 最佳实践
- 消息处理
- 性能优化
- 可靠性
- 调试技巧
- 注意事项
EOF

# 创建12.4RTMP抓包分析文件
cat > "$BASE_DIR/第12章-实战RTMP传输/12.4-RTMP抓包分析.md" << 'EOF'
---
title: RTMP抓包分析
icon: rtmp-capture
order: 4
---

# RTMP抓包分析

## 抓包工具
- 工具选择
- 配置设置
- 数据捕获
- 分析功能
- 导出功能

## 分析方法
- 握手过程
- 连接建立
- 消息交互
- 数据传输
- 连接断开

## 问题诊断
- 协议分析
- 性能分析
- 错误分析
- 问题定位
- 优化建议

## 最佳实践
- 分析方法
- 工具使用
- 问题排查
- 优化建议
- 注意事项
EOF

# 创建12.5FLV协议文件
cat > "$BASE_DIR/第12章-实战RTMP传输/12.5-FLV协议.md" << 'EOF'
---
title: FLV协议
icon: flv-protocol
order: 5
---

# FLV协议

## 协议结构
- 文件头
- 标签类型
- 数据格式
- 时间戳
- 扩展字段

## 数据类型
- 视频数据
- 音频数据
- 脚本数据
- 元数据
- 控制数据

## 处理流程
- 数据解析
- 数据封装
- 时间同步
- 数据传输
- 错误处理

## 最佳实践
- 协议实现
- 性能优化
- 可靠性
- 调试技巧
- 注意事项
EOF

# 创建12.6FLV协议分析器文件
cat > "$BASE_DIR/第12章-实战RTMP传输/12.6-FLV协议分析器.md" << 'EOF'
---
title: FLV协议分析器
icon: flv-analyzer
order: 6
---

# FLV协议分析器

## 分析功能
- 文件解析
- 标签分析
- 数据提取
- 统计分析
- 报告生成

## 实现方法
- 解析器设计
- 数据处理
- 信息提取
- 结果输出
- 错误处理

## 应用场景
- 文件分析
- 流媒体分析
- 问题诊断
- 性能优化
- 质量评估

## 最佳实践
- 实现策略
- 性能优化
- 可靠性
- 调试技巧
- 注意事项
EOF

# 创建12.7推流程序骨架文件
cat > "$BASE_DIR/第12章-实战RTMP传输/12.7-推流程序骨架.md" << 'EOF'
---
title: 推流程序骨架
icon: rtmp-pusher
order: 7
---

# 推流程序骨架

## 程序结构
- 初始化模块
- 数据采集
- 编码处理
- 推流控制
- 资源管理

## 核心功能
- 连接管理
- 数据处理
- 流控制
- 错误处理
- 状态监控

## 实现细节
- 线程管理
- 缓冲控制
- 同步机制
- 性能优化
- 资源释放

## 最佳实践
- 架构设计
- 代码优化
- 性能调优
- 调试技巧
- 注意事项
EOF

# 创建12.8打开FLV文件文件
cat > "$BASE_DIR/第12章-实战RTMP传输/12.8-打开FLV文件.md" << 'EOF'
---
title: 打开FLV文件
icon: flv-open
order: 8
---

# 打开FLV文件

## 文件操作
- 文件打开
- 头部解析
- 数据读取
- 错误处理
- 资源管理

## 数据处理
- 标签解析
- 数据提取
- 时间戳处理
- 数据验证
- 缓冲管理

## 功能实现
- 随机访问
- 数据定位
- 信息提取
- 数据导出
- 错误恢复

## 最佳实践
- 实现策略
- 性能优化
- 可靠性
- 调试技巧
- 注意事项
EOF
BASE_DIR="c:\project\kphub\src\audio-video"

# 创建12.9连接RTMP服务器文件
cat > "$BASE_DIR/第12章-实战RTMP传输/12.9-连接RTMP服务器.md" << 'EOF'
---
title: 连接RTMP服务器
icon: rtmp-server
order: 9
---

# 连接RTMP服务器

## 连接管理
- 服务器配置
- 连接建立
- 会话管理
- 状态监控
- 错误处理

## 实现细节
- 握手过程
- 认证机制
- 连接池
- 重连策略
- 超时处理

## 功能测试
- 连接测试
- 性能测试
- 稳定性测试
- 故障恢复
- 压力测试

## 最佳实践
- 实现策略
- 性能优化
- 可靠性
- 调试技巧
- 注意事项
EOF

# 创建12.10向服务器推流文件
cat > "$BASE_DIR/第12章-实战RTMP传输/12.10-向服务器推流.md" << 'EOF'
---
title: 向服务器推流
icon: rtmp-push
order: 10
---

# 向服务器推流

## 推流流程
- 数据准备
- 流创建
- 数据发送
- 流控制
- 错误处理

## 实现细节
- 数据封装
- 消息组织
- 带宽控制
- 缓冲管理
- 同步机制

## 性能优化
- 发送策略
- 缓冲优化
- 线程管理
- 资源控制
- 延迟控制

## 最佳实践
- 实现策略
- 性能优化
- 可靠性
- 调试技巧
- 注意事项
EOF

# 创建12.11读取FLV标签数据1文件
cat > "$BASE_DIR/第12章-实战RTMP传输/12.11-读取FLV标签数据1.md" << 'EOF'
---
title: 读取FLV标签数据1
icon: flv-tag1
order: 11
---

# 读取FLV标签数据1

## 数据结构
- 标签类型
- 数据长度
- 时间戳
- 扩展字段
- 数据体

## 解析流程
- 头部解析
- 数据提取
- 类型判断
- 时间同步
- 错误处理

## 功能实现
- 标签读取
- 数据验证
- 缓冲管理
- 同步控制
- 错误恢复

## 最佳实践
- 实现策略
- 性能优化
- 可靠性
- 调试技巧
- 注意事项
EOF

# 创建12.12读取FLV标签数据2文件
cat > "$BASE_DIR/第12章-实战RTMP传输/12.12-读取FLV标签数据2.md" << 'EOF'
---
title: 读取FLV标签数据2
icon: flv-tag2
order: 12
---

# 读取FLV标签数据2

## 高级特性
- 批量处理
- 并发读取
- 预读缓存
- 数据过滤
- 性能优化

## 实现优化
- 算法优化
- 内存优化
- 并发处理
- 缓存策略
- 资源管理

## 性能测试
- 读取性能
- 内存使用
- CPU占用
- 响应时间
- 并发能力

## 最佳实践
- 实现策略
- 性能优化
- 可靠性
- 调试技巧
- 注意事项
EOF

# 创建12.13调试与优化文件
cat > "$BASE_DIR/第12章-实战RTMP传输/12.13-调试与优化.md" << 'EOF'
---
title: 调试与优化
icon: debug-optimize
order: 13
---

# 调试与优化

## 调试方法
- 日志分析
- 性能分析
- 内存分析
- 网络分析
- 问题定位

## 优化策略
- 代码优化
- 性能优化
- 内存优化
- 网络优化
- 资源优化

## 问题排查
- 错误处理
- 异常分析
- 性能瓶颈
- 内存泄漏
- 网络问题

## 最佳实践
- 调试技巧
- 优化方法
- 问题解决
- 性能提升
- 注意事项
EOF

# 创建第13章目录
mkdir -p "$BASE_DIR/第13章-实战CDN直播"

# 创建第13章README文件
cat > "$BASE_DIR/第13章-实战CDN直播/README.md" << 'EOF'
---
title: 实战CDN直播
icon: cdn-live
order: 13
---

# 实战CDN直播

本章介绍CDN直播系统的实战应用。
EOF
BASE_DIR="c:\project\kphub\src\audio-video"

# 创建13.1直播系统架构文件
cat > "$BASE_DIR/第13章-实战CDN直播/13.1-直播系统架构.md" << 'EOF'
---
title: 直播系统架构
icon: live-architecture
order: 1
---

# 直播系统架构

## 系统组成
- 推流端
- 转码集群
- 分发网络
- 播放端
- 监控系统

## 核心功能
- 实时推流
- 转码处理
- 负载均衡
- 边缘分发
- 质量监控

## 技术架构
- 协议选择
- 服务部署
- 网络架构
- 存储系统
- 监控系统

## 最佳实践
- 架构设计
- 性能优化
- 可靠性
- 扩展性
- 运维管理
EOF

# 创建13.2本机搭建RTMP服务文件
cat > "$BASE_DIR/第13章-实战CDN直播/13.2-本机搭建RTMP服务.md" << 'EOF'
---
title: 本机搭建RTMP服务
icon: local-rtmp
order: 2
---

# 本机搭建RTMP服务

## 环境准备
- 系统要求
- 依赖安装
- 配置准备
- 端口设置
- 防火墙配置

## 服务配置
- 基本配置
- 应用配置
- 性能优化
- 日志配置
- 安全设置

## 功能测试
- 服务启动
- 推流测试
- 拉流测试
- 性能测试
- 问题排查

## 最佳实践
- 部署策略
- 性能优化
- 安全配置
- 调试技巧
- 注意事项
EOF

# 创建13.3SRS服务器简介文件
cat > "$BASE_DIR/第13章-实战CDN直播/13.3-SRS服务器简介.md" << 'EOF'
---
title: SRS服务器简介
icon: srs-intro
order: 3
---

# SRS服务器简介

## 基本概念
- 功能特点
- 架构设计
- 性能特性
- 应用场景
- 技术优势

## 核心功能
- 协议支持
- 转码能力
- 集群部署
- 监控管理
- 扩展功能

## 技术特点
- 高性能
- 低延迟
- 可扩展
- 易维护
- 高可靠

## 最佳实践
- 应用场景
- 性能优化
- 运维管理
- 问题排查
- 注意事项
EOF

# 创建13.4SRS单机部署文件
cat > "$BASE_DIR/第13章-实战CDN直播/13.4-SRS单机部署.md" << 'EOF'
---
title: SRS单机部署
icon: srs-standalone
order: 4
---

# SRS单机部署

## 部署准备
- 环境要求
- 安装包准备
- 依赖安装
- 配置准备
- 资源规划

## 安装配置
- 安装步骤
- 基础配置
- 功能配置
- 性能优化
- 安全设置

## 功能验证
- 服务启动
- 功能测试
- 性能测试
- 监控配置
- 问题排查

## 最佳实践
- 部署策略
- 性能优化
- 运维管理
- 调试技巧
- 注意事项
EOF

# 创建13.5RTMP URL与VHOST文件
cat > "$BASE_DIR/第13章-实战CDN直播/13.5-RTMP URL与VHOST.md" << 'EOF'
---
title: RTMP URL与VHOST
icon: rtmp-vhost
order: 5
---

# RTMP URL与VHOST

## URL结构
- 协议部分
- 域名部分
- 应用名称
- 流名称
- 参数配置

## VHOST配置
- 虚拟主机
- 域名绑定
- 安全配置
- 转码配置
- 录制配置

## 应用场景
- 多域名支持
- 安全防护
- 转码处理
- 录制存储
- 监控统计

## 最佳实践
- 配置策略
- 安全设置
- 性能优化
- 运维管理
- 注意事项
EOF

# 创建13.6SRS集群部署文件
cat > "$BASE_DIR/第13章-实战CDN直播/13.6-SRS集群部署.md" << 'EOF'
---
title: SRS集群部署
icon: srs-cluster
order: 6
---

# SRS集群部署

## 集群架构
- 节点角色
- 拓扑结构
- 负载均衡
- 高可用性
- 监控管理

## 部署配置
- 节点配置
- 集群配置
- 网络配置
- 存储配置
- 监控配置

## 运维管理
- 部署流程
- 扩容方案
- 故障处理
- 性能优化
- 日常维护

## 最佳实践
- 架构设计
- 部署策略
- 运维管理
- 问题排查
- 注意事项
EOF

# 创建13.7CDN网络文件
cat > "$BASE_DIR/第13章-实战CDN直播/13.7-CDN网络.md" << 'EOF'
---
title: CDN网络
icon: cdn-network
order: 7
---

# CDN网络

## 网络架构
- 节点分布
- 网络拓扑
- 调度系统
- 缓存策略
- 监控系统

## 核心功能
- 内容分发
- 负载均衡
- 智能调度
- 边缘加速
- 安全防护

## 运维管理
- 节点管理
- 流量调度
- 性能优化
- 故障处理
- 监控告警

## 最佳实践
- 架构设计
- 部署策略
- 运维管理
- 问题排查
- 注意事项
EOF
BASE_DIR="c:\project\kphub\src\audio-video"

# 创建13.8阿里云视频直播文件
cat > "$BASE_DIR/第13章-实战CDN直播/13.8-阿里云视频直播.md" << 'EOF'
---
title: 阿里云视频直播
icon: aliyun-live
order: 8
---

# 阿里云视频直播

## 服务架构
- 推流服务
- 转码服务
- 分发服务
- 播放服务
- 监控服务

## 核心功能
- 直播推流
- 实时转码
- 全球分发
- 播放加速
- 安全防护

## 运维管理
- 控制台管理
- 配置管理
- 监控告警
- 统计分析
- 故障处理

## 最佳实践
- 架构设计
- 部署策略
- 运维管理
- 问题排查
- 注意事项
EOF

# 创建13.9真实直播架构文件
cat > "$BASE_DIR/第13章-实战CDN直播/13.9-真实直播架构.md" << 'EOF'
---
title: 真实直播架构
icon: live-architecture
order: 9
---

# 真实直播架构

## 系统架构
- 推流系统
- 转码系统
- 分发系统
- 播放系统
- 监控系统

## 技术实现
- 协议选择
- 编码技术
- 传输优化
- 缓存策略
- 安全机制

## 运维管理
- 部署方案
- 扩容策略
- 监控告警
- 故障处理
- 性能优化

## 最佳实践
- 架构设计
- 技术选型
- 运维管理
- 问题排查
- 注意事项
EOF

# 创建第14章目录
mkdir -p "$BASE_DIR/第14章-课程总结"

# 创建第14章README文件
cat > "$BASE_DIR/第14章-课程总结/README.md" << 'EOF'
---
title: 课程总结
icon: summary
order: 14
---

# 课程总结

本章对整个音视频开发课程进行总结。
EOF

# 创建14.1课程总结文件
cat > "$BASE_DIR/第14章-课程总结/14.1-课程总结.md" << 'EOF'
---
title: 课程总结
icon: course-summary
order: 1
---

# 课程总结

## 知识体系
- 音频基础
- 视频基础
- 编码技术
- 传输协议
- 直播技术

## 技术实践
- 音频处理
- 视频处理
- 编码解码
- 流媒体传输
- CDN直播

## 工程实践
- 架构设计
- 性能优化
- 运维管理
- 问题排查
- 最佳实践

## 发展方向
- 技术趋势
- 应用场景
- 职业发展
- 学习建议
- 实践指导
EOF

# 创建主README文件
cat > "$BASE_DIR/README.md" << 'EOF'
---
title: FFmpeg音视频开发课程
icon: audio-video
order: 1
---

# FFmpeg音视频开发课程

本课程系统地介绍了音视频开发的核心知识和技术实践，从音频视频基础知识到编码原理，从流媒体传输到CDN直播系统，全面覆盖音视频开发的各个方面。
EOF
BASE_DIR="c:\project\kphub\src\audio-video"

# 创建第1章目录
mkdir -p "$BASE_DIR/第1章-学习指南"

# 创建第1章README文件
cat > "$BASE_DIR/第1章-学习指南/README.md" << 'EOF'
---
title: 学习指南
icon: guide
order: 1
---

# 学习指南

本章介绍FFmpeg音视频开发课程的学习准备和基础知识。
EOF

# 创建1.1课前必读文件
cat > "$BASE_DIR/第1章-学习指南/1.1-课前必读.md" << 'EOF'
---
title: 课前必读
icon: pre-reading
order: 1
---

# 课前必读

## 课程概述
- 课程目标
- 学习路径
- 知识体系
- 实践要求
- 预备知识

## 学习建议
- 学习方法
- 时间规划
- 实践安排
- 资源准备
- 常见问题

## 环境准备
- 开发环境
- 工具安装
- 资源下载
- 环境配置
- 测试验证

## 学习资源
- 参考资料
- 实践项目
- 技术社区
- 学习工具
- 常用网站
EOF

# 创建1.2FFmpeg5.0-课程导学文件
cat > "$BASE_DIR/第1章-学习指南/1.2-FFmpeg5.0-课程导学.md" << 'EOF'
---
title: FFmpeg5.0-课程导学
icon: ffmpeg-intro
order: 2
---

# FFmpeg5.0-课程导学

## 课程内容
- 版本特性
- 功能模块
- 架构设计
- 应用场景
- 开发流程

## 技术要点
- 核心概念
- 关键技术
- 开发接口
- 使用方法
- 最佳实践

## 学习路径
- 基础知识
- 进阶技能
- 实战项目
- 性能优化
- 问题排查

## 实践指导
- 开发环境
- 示例代码
- 调试方法
- 测试验证
- 注意事项
EOF

# 创建1.3音视频应用范围与播放器架构讲解文件
cat > "$BASE_DIR/第1章-学习指南/1.3-音视频应用范围与播放器架构讲解.md" << 'EOF'
---
title: 音视频应用范围与播放器架构讲解
icon: media-player
order: 3
---

# 音视频应用范围与播放器架构讲解

## 应用范围
- 视频播放
- 直播系统
- 视频会议
- 短视频
- 视频编辑

## 播放器架构
- 解复用模块
- 解码模块
- 渲染模块
- 音频输出
- 同步控制

## 核心技术
- 编解码
- 传输协议
- 渲染技术
- 同步机制
- 性能优化

## 实现方案
- 架构设计
- 模块划分
- 接口定义
- 数据流转
- 控制流程
EOF

# 创建1.4什么是FFmpeg及其功能文件
cat > "$BASE_DIR/第1章-学习指南/1.4-什么是FFmpeg及其功能.md" << 'EOF'
---
title: 什么是FFmpeg及其功能
icon: ffmpeg-intro
order: 4
---

# 什么是FFmpeg及其功能

## 基本概念
- 项目简介
- 发展历史
- 核心功能
- 技术特点
- 应用场景

## 主要功能
- 格式转换
- 编解码
- 流媒体
- 滤镜处理
- 音视频处理

## 核心组件
- libavcodec
- libavformat
- libavfilter
- libswscale
- libswresample

## 应用实践
- 命令行工具
- 开发接口
- 使用场景
- 最佳实践
- 注意事项
EOF

# 创建1.5FFmpeg下载编译与安装文件
cat > "$BASE_DIR/第1章-学习指南/1.5-FFmpeg下载编译与安装.md" << 'EOF'
---
title: FFmpeg下载编译与安装
icon: ffmpeg-install
order: 5
---

# FFmpeg下载编译与安装

## 下载准备
- 版本选择
- 源码获取
- 依赖检查
- 环境准备
- 工具安装

## 编译配置
- 配置选项
- 依赖设置
- 功能选择
- 优化参数
- 调试选项

## 安装部署
- 编译过程
- 安装步骤
- 环境配置
- 测试验证
- 问题排查

## 最佳实践
- 编译优化
- 配置建议
- 常见问题
- 调试方法
- 注意事项
EOF
BASE_DIR="c:\project\kphub\src\audio-video"

# 创建1.6Windows下安装FFmpeg文件
cat > "$BASE_DIR/第1章-学习指南/1.6-Windows下安装FFmpeg.md" << 'EOF'
---
title: Windows下安装FFmpeg
icon: windows-install
order: 6
---

# Windows下安装FFmpeg

## 安装准备
- 版本选择
- 下载地址
- 系统要求
- 环境检查
- 工具准备

## 安装步骤
- 文件下载
- 解压配置
- 环境变量
- 路径设置
- 权限配置

## 验证测试
- 命令测试
- 功能验证
- 性能测试
- 问题排查
- 故障处理

## 最佳实践
- 安装建议
- 配置优化
- 常见问题
- 调试方法
- 注意事项
EOF

# 创建1.7FFmpeg命令大全文档文件
cat > "$BASE_DIR/第1章-学习指南/1.7-FFmpeg命令大全文档.md" << 'EOF'
---
title: FFmpeg命令大全文档
icon: ffmpeg-commands
order: 7
---

# FFmpeg命令大全文档

## 基础命令
- 格式转换
- 编解码
- 流处理
- 滤镜应用
- 参数设置

## 高级命令
- 复杂处理
- 多任务处理
- 流媒体处理
- 特效制作
- 性能优化

## 命令示例
- 常用场景
- 实战案例
- 参数说明
- 使用技巧
- 注意事项

## 最佳实践
- 命令组合
- 性能优化
- 问题排查
- 调试技巧
- 使用建议
EOF

# 创建第2章目录
mkdir -p "$BASE_DIR/第2章-FFmpeg常用命令实战"

# 创建第2章README文件
cat > "$BASE_DIR/第2章-FFmpeg常用命令实战/README.md" << 'EOF'
---
title: FFmpeg常用命令实战
icon: ffmpeg-practice
order: 2
---

# FFmpeg常用命令实战

本章介绍FFmpeg常用命令的实战应用。
EOF

# 创建2.1FFmpeg命令分类讲解文件
cat > "$BASE_DIR/第2章-FFmpeg常用命令实战/2.1-FFmpeg命令分类讲解.md" << 'EOF'
---
title: FFmpeg命令分类讲解
icon: command-categories
order: 1
---

# FFmpeg命令分类讲解

## 基本分类
- 信息查询
- 格式转换
- 编解码
- 流处理
- 滤镜处理

## 功能分类
- 视频处理
- 音频处理
- 字幕处理
- 流媒体
- 特效制作

## 应用场景
- 视频剪辑
- 直播推流
- 格式转换
- 视频压缩
- 特效制作

## 最佳实践
- 命令选择
- 参数优化
- 性能调优
- 问题排查
- 注意事项
EOF

# 创建2.2音视频处理流程文件
cat > "$BASE_DIR/第2章-FFmpeg常用命令实战/2.2-音视频处理流程.md" << 'EOF'
---
title: 音视频处理流程
icon: media-process
order: 2
---

# 音视频处理流程

## 处理步骤
- 输入解析
- 解复用
- 解码处理
- 编码处理
- 封装输出

## 核心流程
- 数据读取
- 格式转换
- 编解码
- 滤镜处理
- 数据输出

## 关键技术
- 同步控制
- 缓冲管理
- 错误处理
- 性能优化
- 质量控制

## 最佳实践
- 流程优化
- 参数调优
- 性能优化
- 问题排查
- 注意事项
EOF

# 创建2.3基本信息查询命令文件
cat > "$BASE_DIR/第2章-FFmpeg常用命令实战/2.3-基本信息查询命令.md" << 'EOF'
---
title: 基本信息查询命令
icon: info-query
order: 3
---

# 基本信息查询命令

## 基本命令
- 版本信息
- 格式支持
- 编解码器
- 滤镜列表
- 设备信息

## 文件信息
- 容器格式
- 编码参数
- 流信息
- 元数据
- 时长信息

## 系统信息
- 硬件加速
- 设备支持
- 协议支持
- 配置信息
- 编译选项

## 最佳实践
- 命令使用
- 信息分析
- 问题诊断
- 性能评估
- 注意事项
EOF
BASE_DIR="c:\project\kphub\src\audio-video"

# 创建2.4录制命令实战文件
cat > "$BASE_DIR/第2章-FFmpeg常用命令实战/2.4-录制命令实战.md" << 'EOF'
---
title: 录制命令实战
icon: recording
order: 4
---

# 录制命令实战

## 录制设备
- 摄像头录制
- 屏幕录制
- 音频录制
- 设备选择
- 参数配置

## 录制参数
- 视频参数
- 音频参数
- 格式设置
- 编码选项
- 质量控制

## 实战案例
- 视频采集
- 音频采集
- 直播录制
- 屏幕录像
- 多设备录制

## 最佳实践
- 参数优化
- 性能调优
- 质量控制
- 问题排查
- 注意事项
EOF

# 创建2.5分解与复用命令实战文件
cat > "$BASE_DIR/第2章-FFmpeg常用命令实战/2.5-分解与复用命令实战.md" << 'EOF'
---
title: 分解与复用命令实战
icon: demux-mux
order: 5
---

# 分解与复用命令实战

## 分解操作
- 音视频分离
- 流提取
- 数据分析
- 格式转换
- 参数设置

## 复用操作
- 音视频合并
- 流合成
- 容器封装
- 参数配置
- 同步控制

## 实战案例
- 音视频分离
- 多流合并
- 格式转换
- 流重组
- 参数调整

## 最佳实践
- 命令使用
- 参数优化
- 性能调优
- 问题排查
- 注意事项
EOF

# 创建2.6处理原始数据命令实战文件
cat > "$BASE_DIR/第2章-FFmpeg常用命令实战/2.6-处理原始数据命令实战.md" << 'EOF'
---
title: 处理原始数据命令实战
icon: raw-data
order: 6
---

# 处理原始数据命令实战

## 数据类型
- YUV数据
- RGB数据
- PCM数据
- 原始码流
- 数据格式

## 处理方法
- 格式转换
- 数据提取
- 参数调整
- 数据分析
- 质量控制

## 实战案例
- YUV处理
- RGB处理
- PCM处理
- 码流处理
- 数据转换

## 最佳实践
- 命令使用
- 参数优化
- 性能调优
- 问题排查
- 注意事项
EOF

# 创建2.7滤镜命令实战文件
cat > "$BASE_DIR/第2章-FFmpeg常用命令实战/2.7-滤镜命令实战.md" << 'EOF'
---
title: 滤镜命令实战
icon: filters
order: 7
---

# 滤镜命令实战

## 滤镜类型
- 视频滤镜
- 音频滤镜
- 复杂滤镜
- 滤镜链
- 滤镜图

## 常用滤镜
- 缩放滤镜
- 裁剪滤镜
- 旋转滤镜
- 特效滤镜
- 文字滤镜

## 实战案例
- 视频处理
- 音频处理
- 特效制作
- 滤镜组合
- 参数调整

## 最佳实践
- 滤镜选择
- 参数优化
- 性能调优
- 问题排查
- 注意事项
EOF

# 创建2.8裁剪与合并命令实战文件
cat > "$BASE_DIR/第2章-FFmpeg常用命令实战/2.8-裁剪与合并命令实战.md" << 'EOF'
---
title: 裁剪与合并命令实战
icon: cut-merge
order: 8
---

# 裁剪与合并命令实战

## 裁剪操作
- 时间裁剪
- 空间裁剪
- 精确裁剪
- 无损裁剪
- 参数设置

## 合并操作
- 视频合并
- 音频合并
- 流合并
- 无缝拼接
- 参数控制

## 实战案例
- 视频剪辑
- 音频剪辑
- 多段合并
- 画面拼接
- 特效过渡

## 最佳实践
- 命令使用
- 参数优化
- 性能调优
- 问题排查
- 注意事项
EOF

# 创建2.9图片与视频互转实战文件
cat > "$BASE_DIR/第2章-FFmpeg常用命令实战/2.9-图片与视频互转实战.md" << 'EOF'
---
title: 图片与视频互转实战
icon: image-video
order: 9
---

# 图片与视频互转实战

## 视频转图片
- 帧提取
- 序列提取
- 间隔提取
- 质量控制
- 格式设置

## 图片转视频
- 序列合成
- 转场效果
- 帧率控制
- 编码设置
- 参数调整

## 实战案例
- 视频截图
- 视频抽帧
- 图片合成
- 幻灯片
- 特效制作

## 最佳实践
- 命令使用
- 参数优化
- 性能调优
- 问题排查
- 注意事项
EOF

# 创建2.10直播相关命令实战文件
cat > "$BASE_DIR/第2章-FFmpeg常用命令实战/2.10-直播相关命令实战.md" << 'EOF'
---
title: 直播相关命令实战
icon: live-streaming
order: 10
---

# 直播相关命令实战

## 推流命令
- RTMP推流
- HLS推流
- UDP推流
- 参数设置
- 性能控制

## 拉流命令
- RTMP拉流
- HLS拉流
- UDP拉流
- 参数配置
- 缓冲控制

## 实战案例
- 直播推流
- 直播录制
- 流转换
- 多路推流
- 延迟控制

## 最佳实践
- 命令使用
- 参数优化
- 性能调优
- 问题排查
- 注意事项
EOF
BASE_DIR="c:\project\kphub\src\audio-video"

# 创建第3章目录
mkdir -p "$BASE_DIR/第3章-FFmpeg开发必备C语言回顾-vim讲解"

# 创建第3章README文件
cat > "$BASE_DIR/第3章-FFmpeg开发必备C语言回顾-vim讲解/README.md" << 'EOF'
---
title: FFmpeg开发必备C语言回顾-vim讲解
icon: c-vim
order: 3
---

# FFmpeg开发必备C语言回顾-vim讲解

本章介绍FFmpeg开发所需的C语言基础知识和vim编辑器使用技巧。
EOF

# 创建3.1FFmpeg基础开发概述文件
cat > "$BASE_DIR/第3章-FFmpeg开发必备C语言回顾-vim讲解/3.1-FFmpeg基础开发概述.md" << 'EOF'
---
title: FFmpeg基础开发概述
icon: ffmpeg-dev
order: 1
---

# FFmpeg基础开发概述

## 开发基础
- 开发环境
- 编译工具
- 开发框架
- 核心模块
- 接口设计

## 技术要点
- C语言基础
- 音视频基础
- API使用
- 内存管理
- 错误处理

## 开发流程
- 环境搭建
- 接口调用
- 功能实现
- 调试优化
- 测试验证

## 最佳实践
- 代码规范
- 性能优化
- 内存管理
- 错误处理
- 调试技巧
EOF

# 创建3.2vim模式及创建文件文件
cat > "$BASE_DIR/第3章-FFmpeg开发必备C语言回顾-vim讲解/3.2-vim模式及创建文件.md" << 'EOF'
---
title: vim模式及创建文件
icon: vim-modes
order: 2
---

# vim模式及创建文件

## 基本模式
- 普通模式
- 插入模式
- 命令模式
- 可视模式
- 选择模式

## 文件操作
- 创建文件
- 打开文件
- 保存文件
- 关闭文件
- 多文件管理

## 模式切换
- 模式转换
- 快捷键
- 命令使用
- 状态显示
- 模式特点

## 最佳实践
- 操作技巧
- 效率提升
- 常用命令
- 配置优化
- 注意事项
EOF

# 创建3.3vim基本操作与光标移动文件
cat > "$BASE_DIR/第3章-FFmpeg开发必备C语言回顾-vim讲解/3.3-vim基本操作与光标移动.md" << 'EOF'
---
title: vim基本操作与光标移动
icon: vim-basics
order: 3
---

# vim基本操作与光标移动

## 基本操作
- 文本输入
- 文本删除
- 文本复制
- 文本粘贴
- 撤销重做

## 光标移动
- 字符移动
- 单词移动
- 行内移动
- 页面移动
- 文件跳转

## 快捷键
- 移动快捷键
- 编辑快捷键
- 查找快捷键
- 替换快捷键
- 功能快捷键

## 最佳实践
- 操作技巧
- 效率提升
- 常用命令
- 配置优化
- 注意事项
EOF

# 创建3.4vim查找替换与多窗口文件
cat > "$BASE_DIR/第3章-FFmpeg开发必备C语言回顾-vim讲解/3.4-vim查找替换与多窗口.md" << 'EOF'
---
title: vim查找替换与多窗口
icon: vim-search
order: 4
---

# vim查找替换与多窗口

## 查找功能
- 基本查找
- 正向查找
- 反向查找
- 全局查找
- 模式匹配

## 替换功能
- 单行替换
- 全局替换
- 范围替换
- 正则替换
- 确认替换

## 多窗口操作
- 窗口分割
- 窗口切换
- 窗口调整
- 窗口关闭
- 布局管理

## 最佳实践
- 操作技巧
- 效率提升
- 常用命令
- 配置优化
- 注意事项
EOF