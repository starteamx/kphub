# 知识库标签使用规则

## 标签分类规则

### 1. 技术领域标签

- 前端、后端、数据库、运维、架构等核心领域
- 客户端、移动端、桌面端等应用领域
- PHP、PHP框架、PHP CMS等专业领域

### 2. 知识深度标签

必须包含以下其中一个：

- L1-入门概念：基础知识、入门教程
- L2-基础应用：实践应用、常见问题
- L3-深入理解：原理剖析、最佳实践
- L4-精通优化：源码分析、性能调优

### 3. 用途标签

根据实际用途选择：

- 性能优化、安全、工程化、部署
- 调试、测试、API开发、主题开发
- 热更新、App上架等

### 4. 工具框架标签

按照使用的具体技术选择：

- 前端：React、Vue等
- 后端：Node.js、Laravel等
- 数据库：MySQL、Redis等
- 运维：Docker、Kubernetes等

### 5. 编程语言标签

指定使用的语言：

- JavaScript、Python、Java、Go
- Shell、Swift、Kotlin、Dart
- PHP、PHP 8.x等版本

### 6. 平台标签

标注运行环境：

- iOS、Android（移动端）
- macOS、Windows、Linux（桌面端）

### 7. 应用场景标签

描述使用场景：

- 微服务、分布式、高并发
- Serverless、Web开发
- 移动端开发、桌面端开发
- PHP Web开发、API开发
- 博客系统、电商平台

### 8. 时效性标签

标注内容时效：

- 2023更新（年份更新）
- 近期关注（活跃内容）
- 已过时（需要更新）

## 标签使用规则

### 1. 数量限制

- 每篇文档必须包含1个知识深度标签
- 每篇文档建议使用3-5个标签
- 最多不超过8个标签

### 2. 组合规则

推荐组合格式：

```plaintext
[领域]-[深度]-[技术]-[场景]
示例：前端-L2-Vue-电商平台

### 3. 标签规范

- 使用统一的命名格式
- 避免重复或近似标签
- 优先使用已有标签
- 新增标签需要审核

### 4. 维护更新

- 定期检查标签使用情况
- 及时更新过时内容标记
- 删除低使用频率标签
- 合并相似功能标签

## 注意事项

### 1. 标签选择

- 确保标签准确反映内容
- 避免过于宽泛的标签
- 优先选择常用标签
- 合理使用组合标签

### 2. 内容关联

- 相同标签内容要有关联性
- 保持标签层级关系
- 建立知识点关联
- 便于内容检索

### 3. 标签更新

- 定期检查标签有效性
- 根据技术发展更新
- 保持标签体系活力
- 响应用户使用反馈